<?xml version="1.0" ?><wsdl:definitions name="CompoundService" targetNamespace="http://services.novumservices.mwk/" xmlns:ns1="http://schemas.xmlsoap.org/soap/http" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:tns="http://services.novumservices.mwk/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <wsdl:types>
<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://vo.novumservices.mwk/" version="1.0" xmlns:tns="http://vo.novumservices.mwk/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
<xs:element name="AdHocCmpdVO" type="tns:AdHocCmpdVO"></xs:element>
<xs:element name="CmpdBioAssayVO" type="tns:CmpdBioAssayVO"></xs:element>
<xs:element name="CmpdFragmentPChemVO" type="tns:CmpdFragmentPChemVO"></xs:element>
<xs:element name="CmpdFragmentStructureVO" type="tns:CmpdFragmentStructureVO"></xs:element>
<xs:element name="CmpdFragmentVO" type="tns:CmpdFragmentVO"></xs:element>
<xs:element name="CmpdVO" type="tns:CmpdVO"></xs:element>
<xs:element name="DrugTrackerCriteriaVO" type="tns:DrugTrackerCriteriaVO"></xs:element>
<xs:element name="DrugTrackerGridRowVO" type="tns:DrugTrackerGridRowVO"></xs:element>
<xs:element name="DrugTrackerVO" type="tns:DrugTrackerVO"></xs:element>
<xs:element name="NovumListMemberVO" type="tns:NovumListMemberVO"></xs:element>
<xs:element name="NovumListVO" type="tns:NovumListVO"></xs:element>
<xs:element name="RegistrationFragmentVO" type="tns:RegistrationFragmentVO"></xs:element>
<xs:element name="RegistrationVO" type="tns:RegistrationVO"></xs:element>
<xs:element name="RelatedCompoundVO" type="tns:RelatedCompoundVO"></xs:element>
<xs:element name="StandardizedSmilesVO" type="tns:StandardizedSmilesVO"></xs:element>
<xs:element name="StructureVO" type="tns:StructureVO"></xs:element>
<xs:complexType name="StandardizedSmilesVO">
<xs:sequence>
<xs:element minOccurs="0" name="name" type="xs:string"></xs:element>
<xs:element minOccurs="0" name="nsc" type="xs:long"></xs:element>
<xs:element minOccurs="0" name="structureSource" type="xs:string"></xs:element>
<xs:element minOccurs="0" name="smilesFromProd" type="xs:string"></xs:element>
<xs:element minOccurs="0" name="prodCanSmi" type="xs:string"></xs:element>
<xs:element minOccurs="0" name="removedSalts" type="xs:string"></xs:element>
<xs:element minOccurs="0" name="parentCanSmi" type="xs:string"></xs:element>
<xs:element minOccurs="0" name="tautCanSmi" type="xs:string"></xs:element>
<xs:element minOccurs="0" name="tautNostereoCanSmi" type="xs:string"></xs:element>
<xs:element minOccurs="0" name="xeno" type="xs:long"></xs:element>
<xs:element minOccurs="0" name="hf" type="xs:long"></xs:element>
<xs:element minOccurs="0" name="nci60" type="xs:long"></xs:element>
<xs:element minOccurs="0" name="distribution" type="xs:string"></xs:element>
<xs:element minOccurs="0" name="conf" type="xs:string"></xs:element>
<xs:element minOccurs="0" name="inventory" type="xs:double"></xs:element>
<xs:element minOccurs="0" name="mw" type="xs:double"></xs:element>
<xs:element minOccurs="0" name="mf" type="xs:string"></xs:element>
<xs:element minOccurs="0" name="alogp" type="xs:double"></xs:element>
<xs:element minOccurs="0" name="logd" type="xs:double"></xs:element>
<xs:element minOccurs="0" name="hba" type="xs:long"></xs:element>
<xs:element minOccurs="0" name="hbd" type="xs:long"></xs:element>
<xs:element minOccurs="0" name="sa" type="xs:double"></xs:element>
<xs:element minOccurs="0" name="psa" type="xs:double"></xs:element>
<xs:element minOccurs="0" name="prefix" type="xs:string"></xs:element>
<xs:element minOccurs="0" name="id" type="xs:long"></xs:element>
</xs:sequence>
</xs:complexType>
<xs:complexType name="CmpdVO">
<xs:sequence>
<xs:element minOccurs="0" name="name" type="xs:string"></xs:element>
<xs:element minOccurs="0" name="nsc" type="xs:long"></xs:element>
<xs:element minOccurs="0" name="distribution" type="xs:string"></xs:element>
<xs:element minOccurs="0" name="conf" type="xs:string"></xs:element>
<xs:element minOccurs="0" name="inventory" type="xs:double"></xs:element>
<xs:element minOccurs="0" name="cas" type="xs:string"></xs:element>
<xs:element maxOccurs="unbounded" minOccurs="0" name="targets" type="xs:string"></xs:element>
<xs:element maxOccurs="unbounded" minOccurs="0" name="aliases" type="xs:string"></xs:element>
<xs:element minOccurs="0" name="prefix" type="xs:string"></xs:element>
<xs:element maxOccurs="unbounded" minOccurs="0" name="cmpdFragments" type="tns:CmpdFragmentVO"></xs:element>
<xs:element minOccurs="0" name="id" type="xs:long"></xs:element>
<xs:element minOccurs="0" name="cmpdBioAssay" type="tns:CmpdBioAssayVO"></xs:element>
<xs:element minOccurs="0" name="cmpdId" type="xs:long"></xs:element>
<xs:element minOccurs="0" name="parentFragment" type="tns:CmpdFragmentVO"></xs:element>
</xs:sequence>
</xs:complexType>
<xs:complexType name="CmpdFragmentVO">
<xs:sequence>
<xs:element minOccurs="0" name="id" type="xs:long"></xs:element>
<xs:element minOccurs="0" name="cmpdFragmentStructure" type="tns:CmpdFragmentStructureVO"></xs:element>
<xs:element minOccurs="0" name="cmpdFragmentPChem" type="tns:CmpdFragmentPChemVO"></xs:element>
</xs:sequence>
</xs:complexType>
<xs:complexType name="CmpdFragmentStructureVO">
<xs:sequence>
<xs:element minOccurs="0" name="smiles" type="xs:string"></xs:element>
<xs:element minOccurs="0" name="inchi" type="xs:string"></xs:element>
<xs:element minOccurs="0" name="mol" type="xs:string"></xs:element>
<xs:element minOccurs="0" name="inchiAux" type="xs:string"></xs:element>
<xs:element minOccurs="0" name="ctab" type="xs:string"></xs:element>
<xs:element minOccurs="0" name="id" type="xs:long"></xs:element>
</xs:sequence>
</xs:complexType>
<xs:complexType name="CmpdFragmentPChemVO">
<xs:sequence>
<xs:element minOccurs="0" name="mw" type="xs:double"></xs:element>
<xs:element minOccurs="0" name="mf" type="xs:string"></xs:element>
<xs:element minOccurs="0" name="alogp" type="xs:double"></xs:element>
<xs:element minOccurs="0" name="logd" type="xs:double"></xs:element>
<xs:element minOccurs="0" name="hba" type="xs:int"></xs:element>
<xs:element minOccurs="0" name="hbd" type="xs:int"></xs:element>
<xs:element minOccurs="0" name="sa" type="xs:double"></xs:element>
<xs:element minOccurs="0" name="psa" type="xs:double"></xs:element>
<xs:element minOccurs="0" name="id" type="xs:long"></xs:element>
</xs:sequence>
</xs:complexType>
<xs:complexType name="CmpdBioAssayVO">
<xs:sequence>
<xs:element minOccurs="0" name="nci60" type="xs:int"></xs:element>
<xs:element minOccurs="0" name="hf" type="xs:int"></xs:element>
<xs:element minOccurs="0" name="xeno" type="xs:int"></xs:element>
<xs:element minOccurs="0" name="id" type="xs:long"></xs:element>
</xs:sequence>
</xs:complexType>
<xs:complexType name="DrugTrackerVO">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="targets" type="xs:string"></xs:element>
<xs:element minOccurs="0" name="nsc" type="xs:long"></xs:element>
<xs:element minOccurs="0" name="cas" type="xs:string"></xs:element>
<xs:element maxOccurs="unbounded" minOccurs="0" name="aliases" type="xs:string"></xs:element>
<xs:element minOccurs="0" name="originator" type="xs:string"></xs:element>
<xs:element minOccurs="0" name="agent" type="xs:string"></xs:element>
<xs:element minOccurs="0" name="structureSource" type="xs:string"></xs:element>
<xs:element minOccurs="0" name="smilesFromProd" type="xs:string"></xs:element>
<xs:element minOccurs="0" name="prodCanSmi" type="xs:string"></xs:element>
<xs:element minOccurs="0" name="removedSalts" type="xs:string"></xs:element>
<xs:element minOccurs="0" name="parentCanSmi" type="xs:string"></xs:element>
<xs:element minOccurs="0" name="tautCanSmi" type="xs:string"></xs:element>
<xs:element minOccurs="0" name="tautNostereoCanSmi" type="xs:string"></xs:element>
<xs:element minOccurs="0" name="xeno" type="xs:long"></xs:element>
<xs:element minOccurs="0" name="hf" type="xs:long"></xs:element>
<xs:element minOccurs="0" name="nci60" type="xs:long"></xs:element>
<xs:element minOccurs="0" name="distribution" type="xs:string"></xs:element>
<xs:element minOccurs="0" name="conf" type="xs:string"></xs:element>
<xs:element minOccurs="0" name="inventory" type="xs:double"></xs:element>
<xs:element minOccurs="0" name="drugStatus" type="xs:string"></xs:element>
<xs:element minOccurs="0" name="mw" type="xs:double"></xs:element>
<xs:element minOccurs="0" name="mf" type="xs:string"></xs:element>
<xs:element minOccurs="0" name="alogp" type="xs:double"></xs:element>
<xs:element minOccurs="0" name="logd" type="xs:double"></xs:element>
<xs:element minOccurs="0" name="hba" type="xs:long"></xs:element>
<xs:element minOccurs="0" name="hbd" type="xs:long"></xs:element>
<xs:element minOccurs="0" name="sa" type="xs:double"></xs:element>
<xs:element minOccurs="0" name="psa" type="xs:double"></xs:element>
<xs:element minOccurs="0" name="prefix" type="xs:string"></xs:element>
<xs:element minOccurs="0" name="mdl_mol" type="xs:string"></xs:element>
<xs:element minOccurs="0" name="plate" type="xs:string"></xs:element>
<xs:element minOccurs="0" name="id" type="xs:long"></xs:element>
</xs:sequence>
</xs:complexType>
<xs:complexType name="AdHocCmpdVO">
<xs:sequence>
<xs:element minOccurs="0" name="cmpdOwner" type="xs:string"></xs:element>
<xs:element minOccurs="0" name="cmpdId" type="xs:long"></xs:element>
<xs:element minOccurs="0" name="name" type="xs:string"></xs:element>
<xs:element minOccurs="0" name="id" type="xs:long"></xs:element>
<xs:element maxOccurs="unbounded" minOccurs="0" name="cmpdFragments" type="tns:CmpdFragmentVO"></xs:element>
</xs:sequence>
</xs:complexType>
<xs:complexType name="NovumListMemberVO">
<xs:sequence>
<xs:element minOccurs="0" name="id" type="xs:long"></xs:element>
<xs:element minOccurs="0" name="cmpd" type="tns:CmpdVO"></xs:element>
<xs:element minOccurs="0" name="adHocCmpd" type="tns:AdHocCmpdVO"></xs:element>
</xs:sequence>
</xs:complexType>
<xs:complexType name="RegistrationVO">
<xs:sequence>
<xs:element minOccurs="0" name="agent" type="xs:string"></xs:element>
<xs:element minOccurs="0" name="structureSource" type="xs:string"></xs:element>
<xs:element minOccurs="0" name="mw" type="xs:double"></xs:element>
<xs:element minOccurs="0" name="mf" type="xs:string"></xs:element>
<xs:element minOccurs="0" name="alogp" type="xs:double"></xs:element>
<xs:element minOccurs="0" name="logd" type="xs:double"></xs:element>
<xs:element minOccurs="0" name="hba" type="xs:long"></xs:element>
<xs:element minOccurs="0" name="hbd" type="xs:long"></xs:element>
<xs:element minOccurs="0" name="sa" type="xs:double"></xs:element>
<xs:element minOccurs="0" name="psa" type="xs:double"></xs:element>
<xs:element minOccurs="0" name="cas" type="xs:string"></xs:element>
<xs:element maxOccurs="unbounded" minOccurs="0" name="targets" type="xs:string"></xs:element>
<xs:element maxOccurs="unbounded" minOccurs="0" name="aliases" type="xs:string"></xs:element>
<xs:element minOccurs="0" name="mdl_mol" type="xs:string"></xs:element>
<xs:element minOccurs="0" name="originator" type="xs:string"></xs:element>
<xs:element maxOccurs="unbounded" minOccurs="0" name="removedSalts" type="xs:string"></xs:element>
<xs:element minOccurs="0" name="smiles" type="xs:string"></xs:element>
<xs:element minOccurs="0" name="inchi" type="xs:string"></xs:element>
<xs:element minOccurs="0" name="inchiAuxInfo" type="xs:string"></xs:element>
<xs:element maxOccurs="unbounded" minOccurs="0" name="warnings" type="xs:string"></xs:element>
<xs:element maxOccurs="unbounded" minOccurs="0" name="registrationFragments" type="tns:RegistrationFragmentVO"></xs:element>
<xs:element minOccurs="0" name="id" type="xs:long"></xs:element>
</xs:sequence>
</xs:complexType>
<xs:complexType name="RegistrationFragmentVO">
<xs:sequence>
<xs:element minOccurs="0" name="agent" type="xs:string"></xs:element>
<xs:element minOccurs="0" name="structureSource" type="xs:string"></xs:element>
<xs:element minOccurs="0" name="mw" type="xs:double"></xs:element>
<xs:element minOccurs="0" name="mf" type="xs:string"></xs:element>
<xs:element minOccurs="0" name="alogp" type="xs:double"></xs:element>
<xs:element minOccurs="0" name="logd" type="xs:double"></xs:element>
<xs:element minOccurs="0" name="hba" type="xs:long"></xs:element>
<xs:element minOccurs="0" name="hbd" type="xs:long"></xs:element>
<xs:element minOccurs="0" name="sa" type="xs:double"></xs:element>
<xs:element minOccurs="0" name="psa" type="xs:double"></xs:element>
<xs:element minOccurs="0" name="cas" type="xs:string"></xs:element>
<xs:element maxOccurs="unbounded" minOccurs="0" name="targets" type="xs:string"></xs:element>
<xs:element maxOccurs="unbounded" minOccurs="0" name="aliases" type="xs:string"></xs:element>
<xs:element minOccurs="0" name="mdl_mol" type="xs:string"></xs:element>
<xs:element minOccurs="0" name="originator" type="xs:string"></xs:element>
<xs:element maxOccurs="unbounded" minOccurs="0" name="removedSalts" type="xs:string"></xs:element>
<xs:element minOccurs="0" name="smiles" type="xs:string"></xs:element>
<xs:element minOccurs="0" name="inchi" type="xs:string"></xs:element>
<xs:element minOccurs="0" name="inchiAuxInfo" type="xs:string"></xs:element>
<xs:element maxOccurs="unbounded" minOccurs="0" name="warnings" type="xs:string"></xs:element>
<xs:element minOccurs="0" name="id" type="xs:long"></xs:element>
</xs:sequence>
</xs:complexType>
<xs:complexType name="NovumListVO">
<xs:sequence>
<xs:element minOccurs="0" name="listName" type="xs:string"></xs:element>
<xs:element minOccurs="0" name="listOwner" type="xs:string"></xs:element>
<xs:element minOccurs="0" name="shareWith" type="xs:string"></xs:element>
<xs:element minOccurs="0" name="id" type="xs:long"></xs:element>
<xs:element maxOccurs="unbounded" minOccurs="0" name="listMembers" type="tns:NovumListMemberVO"></xs:element>
<xs:element minOccurs="0" name="novumListId" type="xs:long"></xs:element>
<xs:element minOccurs="0" name="countListMembers" type="xs:int"></xs:element>
</xs:sequence>
<xs:attribute name="dateCreated" type="xs:dateTime" use="required"></xs:attribute>
</xs:complexType>
<xs:complexType name="RelatedCompoundVO">
<xs:sequence>
<xs:element minOccurs="0" name="nsc" type="xs:long"></xs:element>
<xs:element minOccurs="0" name="relatedNsc" type="xs:long"></xs:element>
<xs:element minOccurs="0" name="relation" type="xs:string"></xs:element>
<xs:element minOccurs="0" name="id" type="xs:long"></xs:element>
</xs:sequence>
</xs:complexType>
<xs:complexType name="DrugTrackerCriteriaVO">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="nscs" type="xs:long"></xs:element>
<xs:element maxOccurs="unbounded" minOccurs="0" name="cases" type="xs:string"></xs:element>
<xs:element maxOccurs="unbounded" minOccurs="0" name="targets" type="xs:string"></xs:element>
<xs:element maxOccurs="unbounded" minOccurs="0" name="originators" type="xs:string"></xs:element>
<xs:element maxOccurs="unbounded" minOccurs="0" name="drugStatuses" type="xs:string"></xs:element>
<xs:element maxOccurs="unbounded" minOccurs="0" name="aliases" type="xs:string"></xs:element>
<xs:element maxOccurs="unbounded" minOccurs="0" name="plates" type="xs:string"></xs:element>
<xs:element maxOccurs="unbounded" minOccurs="0" name="agents" type="xs:string"></xs:element>
</xs:sequence>
</xs:complexType>
<xs:complexType name="DrugTrackerGridRowVO">
<xs:sequence>
<xs:element minOccurs="0" name="first" type="tns:DrugTrackerVO"></xs:element>
<xs:element minOccurs="0" name="second" type="tns:DrugTrackerVO"></xs:element>
<xs:element minOccurs="0" name="third" type="tns:DrugTrackerVO"></xs:element>
</xs:sequence>
</xs:complexType>
<xs:complexType name="StructureVO">
<xs:sequence>
<xs:element minOccurs="0" name="nsc" type="xs:long"></xs:element>
<xs:element minOccurs="0" name="smiles" type="xs:string"></xs:element>
<xs:element minOccurs="0" name="id" type="xs:long"></xs:element>
</xs:sequence>
</xs:complexType>
</xs:schema>
<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://services.novumservices.mwk/" version="1.0" xmlns:ns1="http://vo.novumservices.mwk/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
<xs:import namespace="http://vo.novumservices.mwk/"></xs:import>
<xs:element name="findCmpdsByDiceSimilarity">
<xs:complexType>
<xs:sequence>
<xs:element name="substructureSmiles" type="xs:string"></xs:element>
<xs:element name="whichListToSearch" type="xs:string"></xs:element>
<xs:element minOccurs="0" name="similarityCutoff" type="xs:double"></xs:element>
</xs:sequence>
</xs:complexType>
</xs:element>
<xs:element name="findCmpdsByDiceSimilarityResponse">
<xs:complexType>
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="cmpdReturnLists" type="ns1:CmpdVO"></xs:element>
</xs:sequence>
</xs:complexType>
</xs:element>
<xs:element name="findCmpdsByNsc">
<xs:complexType>
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="nscs" type="xs:long"></xs:element>
</xs:sequence>
</xs:complexType>
</xs:element>
<xs:element name="findCmpdsByNscResponse">
<xs:complexType>
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="cmpdReturnLists" type="ns1:CmpdVO"></xs:element>
</xs:sequence>
</xs:complexType>
</xs:element>
<xs:element name="findCmpdsBySmartsSubstructure">
<xs:complexType>
<xs:sequence>
<xs:element name="substructureSmiles" type="xs:string"></xs:element>
<xs:element name="whichListToSearch" type="xs:string"></xs:element>
</xs:sequence>
</xs:complexType>
</xs:element>
<xs:element name="findCmpdsBySmartsSubstructureResponse">
<xs:complexType>
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="cmpdReturnLists" type="ns1:CmpdVO"></xs:element>
</xs:sequence>
</xs:complexType>
</xs:element>
<xs:element name="findCmpdsBySmilesExactMatch">
<xs:complexType>
<xs:sequence>
<xs:element name="substructureSmiles" type="xs:string"></xs:element>
<xs:element name="whichListToSearch" type="xs:string"></xs:element>
</xs:sequence>
</xs:complexType>
</xs:element>
<xs:element name="findCmpdsBySmilesExactMatchResponse">
<xs:complexType>
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="cmpdReturnLists" type="ns1:CmpdVO"></xs:element>
</xs:sequence>
</xs:complexType>
</xs:element>
<xs:element name="findCmpdsBySmilesSubstructure">
<xs:complexType>
<xs:sequence>
<xs:element name="substructureSmiles" type="xs:string"></xs:element>
<xs:element name="whichListToSearch" type="xs:string"></xs:element>
</xs:sequence>
</xs:complexType>
</xs:element>
<xs:element name="findCmpdsBySmilesSubstructureResponse">
<xs:complexType>
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="cmpdReturnLists" type="ns1:CmpdVO"></xs:element>
</xs:sequence>
</xs:complexType>
</xs:element>
<xs:element name="findCmpdsByTanimotoSimilarity">
<xs:complexType>
<xs:sequence>
<xs:element name="substructureSmiles" type="xs:string"></xs:element>
<xs:element name="whichListToSearch" type="xs:string"></xs:element>
<xs:element minOccurs="0" name="similarityCutoff" type="xs:double"></xs:element>
</xs:sequence>
</xs:complexType>
</xs:element>
<xs:element name="findCmpdsByTanimotoSimilarityResponse">
<xs:complexType>
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="cmpdReturnLists" type="ns1:CmpdVO"></xs:element>
</xs:sequence>
</xs:complexType>
</xs:element>
<xs:element name="findCompoundsByDiceSimilarity">
<xs:complexType>
<xs:sequence>
<xs:element name="substructureSmiles" type="xs:string"></xs:element>
<xs:element name="whichListToSearch" type="xs:string"></xs:element>
<xs:element minOccurs="0" name="similarityCutoff" type="xs:double"></xs:element>
</xs:sequence>
</xs:complexType>
</xs:element>
<xs:element name="findCompoundsByDiceSimilarityResponse">
<xs:complexType>
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="ssReturnLists" type="ns1:StandardizedSmilesVO"></xs:element>
</xs:sequence>
</xs:complexType>
</xs:element>
<xs:element name="findCompoundsByNsc">
<xs:complexType>
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="nscs" type="xs:long"></xs:element>
</xs:sequence>
</xs:complexType>
</xs:element>
<xs:element name="findCompoundsByNscResponse">
<xs:complexType>
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="ssReturnLists" type="ns1:StandardizedSmilesVO"></xs:element>
</xs:sequence>
</xs:complexType>
</xs:element>
<xs:element name="findCompoundsBySmartsSubstructure">
<xs:complexType>
<xs:sequence>
<xs:element name="substructureSmiles" type="xs:string"></xs:element>
<xs:element name="whichListToSearch" type="xs:string"></xs:element>
</xs:sequence>
</xs:complexType>
</xs:element>
<xs:element name="findCompoundsBySmartsSubstructureResponse">
<xs:complexType>
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="ssReturnLists" type="ns1:StandardizedSmilesVO"></xs:element>
</xs:sequence>
</xs:complexType>
</xs:element>
<xs:element name="findCompoundsBySmilesSubstructure">
<xs:complexType>
<xs:sequence>
<xs:element name="substructureSmiles" type="xs:string"></xs:element>
<xs:element name="whichListToSearch" type="xs:string"></xs:element>
</xs:sequence>
</xs:complexType>
</xs:element>
<xs:element name="findCompoundsBySmilesSubstructureResponse">
<xs:complexType>
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="ssReturnLists" type="ns1:StandardizedSmilesVO"></xs:element>
</xs:sequence>
</xs:complexType>
</xs:element>
<xs:element name="findCompoundsByTanimotoSimilarity">
<xs:complexType>
<xs:sequence>
<xs:element name="substructureSmiles" type="xs:string"></xs:element>
<xs:element name="whichListToSearch" type="xs:string"></xs:element>
<xs:element minOccurs="0" name="similarityCutoff" type="xs:double"></xs:element>
</xs:sequence>
</xs:complexType>
</xs:element>
<xs:element name="findCompoundsByTanimotoSimilarityResponse">
<xs:complexType>
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="ssReturnLists" type="ns1:StandardizedSmilesVO"></xs:element>
</xs:sequence>
</xs:complexType>
</xs:element>
<xs:element name="findDrugTrackersBySmilesSubstructure">
<xs:complexType>
<xs:sequence>
<xs:element name="substructureSmiles" type="xs:string"></xs:element>
<xs:element name="whichListToSearch" type="xs:string"></xs:element>
</xs:sequence>
</xs:complexType>
</xs:element>
<xs:element name="findDrugTrackersBySmilesSubstructureResponse">
<xs:complexType>
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="dtReturnLists" type="ns1:DrugTrackerVO"></xs:element>
</xs:sequence>
</xs:complexType>
</xs:element>
<xs:element name="getAgentBackingList">
<xs:complexType>
<xs:sequence></xs:sequence>
</xs:complexType>
</xs:element>
<xs:element name="getAgentBackingListResponse">
<xs:complexType>
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="agentBacks" type="xs:string"></xs:element>
</xs:sequence>
</xs:complexType>
</xs:element>
<xs:element name="getAliasBackingList">
<xs:complexType>
<xs:sequence></xs:sequence>
</xs:complexType>
</xs:element>
<xs:element name="getAliasBackingListResponse">
<xs:complexType>
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="aliasBacks" type="xs:string"></xs:element>
</xs:sequence>
</xs:complexType>
</xs:element>
<xs:element name="getCasBackingList">
<xs:complexType>
<xs:sequence></xs:sequence>
</xs:complexType>
</xs:element>
<xs:element name="getCasBackingListResponse">
<xs:complexType>
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="casBacks" type="xs:string"></xs:element>
</xs:sequence>
</xs:complexType>
</xs:element>
<xs:element name="getDrugStatusBackingList">
<xs:complexType>
<xs:sequence></xs:sequence>
</xs:complexType>
</xs:element>
<xs:element name="getDrugStatusBackingListResponse">
<xs:complexType>
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="drugStatusBacks" type="xs:string"></xs:element>
</xs:sequence>
</xs:complexType>
</xs:element>
<xs:element name="getNscBackingList">
<xs:complexType>
<xs:sequence></xs:sequence>
</xs:complexType>
</xs:element>
<xs:element name="getNscBackingListResponse">
<xs:complexType>
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="nscBacks" type="xs:string"></xs:element>
</xs:sequence>
</xs:complexType>
</xs:element>
<xs:element name="getOriginatorBackingList">
<xs:complexType>
<xs:sequence></xs:sequence>
</xs:complexType>
</xs:element>
<xs:element name="getOriginatorBackingListResponse">
<xs:complexType>
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="originatorBacks" type="xs:string"></xs:element>
</xs:sequence>
</xs:complexType>
</xs:element>
<xs:element name="getPlatesBackingList">
<xs:complexType>
<xs:sequence></xs:sequence>
</xs:complexType>
</xs:element>
<xs:element name="getPlatesBackingListResponse">
<xs:complexType>
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="plateBacks" type="xs:string"></xs:element>
</xs:sequence>
</xs:complexType>
</xs:element>
<xs:element name="getTargetBackingList">
<xs:complexType>
<xs:sequence></xs:sequence>
</xs:complexType>
</xs:element>
<xs:element name="getTargetBackingListResponse">
<xs:complexType>
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="targetBacks" type="xs:string"></xs:element>
</xs:sequence>
</xs:complexType>
</xs:element>
<xs:element name="searchByCriteria">
<xs:complexType>
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="nscs" type="xs:long"></xs:element>
<xs:element maxOccurs="unbounded" minOccurs="0" name="cases" type="xs:string"></xs:element>
<xs:element maxOccurs="unbounded" minOccurs="0" name="originators" type="xs:string"></xs:element>
<xs:element maxOccurs="unbounded" minOccurs="0" name="aliases" type="xs:string"></xs:element>
<xs:element maxOccurs="unbounded" minOccurs="0" name="targets" type="xs:string"></xs:element>
<xs:element maxOccurs="unbounded" minOccurs="0" name="drugStatuses" type="xs:string"></xs:element>
<xs:element maxOccurs="unbounded" minOccurs="0" name="agents" type="xs:string"></xs:element>
<xs:element maxOccurs="unbounded" minOccurs="0" name="plates" type="xs:string"></xs:element>
</xs:sequence>
</xs:complexType>
</xs:element>
<xs:element name="searchByCriteriaResponse">
<xs:complexType>
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="drugTrackers" type="ns1:DrugTrackerVO"></xs:element>
</xs:sequence>
</xs:complexType>
</xs:element>
</xs:schema>
  </wsdl:types>
  <wsdl:message name="findCompoundsByNsc">
    <wsdl:part element="tns:findCompoundsByNsc" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="findCmpdsBySmilesExactMatchResponse">
    <wsdl:part element="tns:findCmpdsBySmilesExactMatchResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="findCompoundsBySmilesSubstructureResponse">
    <wsdl:part element="tns:findCompoundsBySmilesSubstructureResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="findCompoundsBySmilesSubstructure">
    <wsdl:part element="tns:findCompoundsBySmilesSubstructure" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="findCmpdsBySmartsSubstructure">
    <wsdl:part element="tns:findCmpdsBySmartsSubstructure" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="findCmpdsBySmilesSubstructureResponse">
    <wsdl:part element="tns:findCmpdsBySmilesSubstructureResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="findCmpdsBySmilesSubstructure">
    <wsdl:part element="tns:findCmpdsBySmilesSubstructure" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="findCmpdsByTanimotoSimilarityResponse">
    <wsdl:part element="tns:findCmpdsByTanimotoSimilarityResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="findCompoundsByNscResponse">
    <wsdl:part element="tns:findCompoundsByNscResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="findCmpdsBySmilesExactMatch">
    <wsdl:part element="tns:findCmpdsBySmilesExactMatch" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="findCmpdsByDiceSimilarityResponse">
    <wsdl:part element="tns:findCmpdsByDiceSimilarityResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="findCompoundsByTanimotoSimilarity">
    <wsdl:part element="tns:findCompoundsByTanimotoSimilarity" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="findCompoundsByTanimotoSimilarityResponse">
    <wsdl:part element="tns:findCompoundsByTanimotoSimilarityResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="findCompoundsByDiceSimilarity">
    <wsdl:part element="tns:findCompoundsByDiceSimilarity" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="findDrugTrackersBySmilesSubstructure">
    <wsdl:part element="tns:findDrugTrackersBySmilesSubstructure" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="findCompoundsBySmartsSubstructureResponse">
    <wsdl:part element="tns:findCompoundsBySmartsSubstructureResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="findCmpdsByNsc">
    <wsdl:part element="tns:findCmpdsByNsc" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="findCompoundsByDiceSimilarityResponse">
    <wsdl:part element="tns:findCompoundsByDiceSimilarityResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="findDrugTrackersBySmilesSubstructureResponse">
    <wsdl:part element="tns:findDrugTrackersBySmilesSubstructureResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="findCmpdsByDiceSimilarity">
    <wsdl:part element="tns:findCmpdsByDiceSimilarity" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="findCompoundsBySmartsSubstructure">
    <wsdl:part element="tns:findCompoundsBySmartsSubstructure" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="findCmpdsBySmartsSubstructureResponse">
    <wsdl:part element="tns:findCmpdsBySmartsSubstructureResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="findCmpdsByTanimotoSimilarity">
    <wsdl:part element="tns:findCmpdsByTanimotoSimilarity" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="findCmpdsByNscResponse">
    <wsdl:part element="tns:findCmpdsByNscResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:portType name="CompoundService">
    <wsdl:operation name="findCompoundsByTanimotoSimilarity">
      <wsdl:input message="tns:findCompoundsByTanimotoSimilarity" name="findCompoundsByTanimotoSimilarity">
    </wsdl:input>
      <wsdl:output message="tns:findCompoundsByTanimotoSimilarityResponse" name="findCompoundsByTanimotoSimilarityResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findCmpdsByNsc">
      <wsdl:input message="tns:findCmpdsByNsc" name="findCmpdsByNsc">
    </wsdl:input>
      <wsdl:output message="tns:findCmpdsByNscResponse" name="findCmpdsByNscResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findCmpdsBySmilesSubstructure">
      <wsdl:input message="tns:findCmpdsBySmilesSubstructure" name="findCmpdsBySmilesSubstructure">
    </wsdl:input>
      <wsdl:output message="tns:findCmpdsBySmilesSubstructureResponse" name="findCmpdsBySmilesSubstructureResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findCompoundsBySmilesSubstructure">
      <wsdl:input message="tns:findCompoundsBySmilesSubstructure" name="findCompoundsBySmilesSubstructure">
    </wsdl:input>
      <wsdl:output message="tns:findCompoundsBySmilesSubstructureResponse" name="findCompoundsBySmilesSubstructureResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findCompoundsByDiceSimilarity">
      <wsdl:input message="tns:findCompoundsByDiceSimilarity" name="findCompoundsByDiceSimilarity">
    </wsdl:input>
      <wsdl:output message="tns:findCompoundsByDiceSimilarityResponse" name="findCompoundsByDiceSimilarityResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findDrugTrackersBySmilesSubstructure">
      <wsdl:input message="tns:findDrugTrackersBySmilesSubstructure" name="findDrugTrackersBySmilesSubstructure">
    </wsdl:input>
      <wsdl:output message="tns:findDrugTrackersBySmilesSubstructureResponse" name="findDrugTrackersBySmilesSubstructureResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findCompoundsByNsc">
      <wsdl:input message="tns:findCompoundsByNsc" name="findCompoundsByNsc">
    </wsdl:input>
      <wsdl:output message="tns:findCompoundsByNscResponse" name="findCompoundsByNscResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findCmpdsBySmilesExactMatch">
      <wsdl:input message="tns:findCmpdsBySmilesExactMatch" name="findCmpdsBySmilesExactMatch">
    </wsdl:input>
      <wsdl:output message="tns:findCmpdsBySmilesExactMatchResponse" name="findCmpdsBySmilesExactMatchResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findCmpdsByTanimotoSimilarity">
      <wsdl:input message="tns:findCmpdsByTanimotoSimilarity" name="findCmpdsByTanimotoSimilarity">
    </wsdl:input>
      <wsdl:output message="tns:findCmpdsByTanimotoSimilarityResponse" name="findCmpdsByTanimotoSimilarityResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findCmpdsBySmartsSubstructure">
      <wsdl:input message="tns:findCmpdsBySmartsSubstructure" name="findCmpdsBySmartsSubstructure">
    </wsdl:input>
      <wsdl:output message="tns:findCmpdsBySmartsSubstructureResponse" name="findCmpdsBySmartsSubstructureResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findCmpdsByDiceSimilarity">
      <wsdl:input message="tns:findCmpdsByDiceSimilarity" name="findCmpdsByDiceSimilarity">
    </wsdl:input>
      <wsdl:output message="tns:findCmpdsByDiceSimilarityResponse" name="findCmpdsByDiceSimilarityResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findCompoundsBySmartsSubstructure">
      <wsdl:input message="tns:findCompoundsBySmartsSubstructure" name="findCompoundsBySmartsSubstructure">
    </wsdl:input>
      <wsdl:output message="tns:findCompoundsBySmartsSubstructureResponse" name="findCompoundsBySmartsSubstructureResponse">
    </wsdl:output>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="CompoundServiceSoapBinding" type="tns:CompoundService">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"></soap:binding>
    <wsdl:operation name="findCompoundsByTanimotoSimilarity">
      <soap:operation soapAction="findCompoundsByTanimotoSimilarity" style="document"></soap:operation>
      <wsdl:input name="findCompoundsByTanimotoSimilarity">
        <soap:body use="literal"></soap:body>
      </wsdl:input>
      <wsdl:output name="findCompoundsByTanimotoSimilarityResponse">
        <soap:body use="literal"></soap:body>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findCmpdsByNsc">
      <soap:operation soapAction="findCmpdsByNsc" style="document"></soap:operation>
      <wsdl:input name="findCmpdsByNsc">
        <soap:body use="literal"></soap:body>
      </wsdl:input>
      <wsdl:output name="findCmpdsByNscResponse">
        <soap:body use="literal"></soap:body>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findCmpdsBySmilesSubstructure">
      <soap:operation soapAction="findCmpdsBySmilesSubstructure" style="document"></soap:operation>
      <wsdl:input name="findCmpdsBySmilesSubstructure">
        <soap:body use="literal"></soap:body>
      </wsdl:input>
      <wsdl:output name="findCmpdsBySmilesSubstructureResponse">
        <soap:body use="literal"></soap:body>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findCompoundsByDiceSimilarity">
      <soap:operation soapAction="findCompoundsByDiceSimilarity" style="document"></soap:operation>
      <wsdl:input name="findCompoundsByDiceSimilarity">
        <soap:body use="literal"></soap:body>
      </wsdl:input>
      <wsdl:output name="findCompoundsByDiceSimilarityResponse">
        <soap:body use="literal"></soap:body>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findCompoundsBySmilesSubstructure">
      <soap:operation soapAction="findCompoundsBySmilesSubstructure" style="document"></soap:operation>
      <wsdl:input name="findCompoundsBySmilesSubstructure">
        <soap:body use="literal"></soap:body>
      </wsdl:input>
      <wsdl:output name="findCompoundsBySmilesSubstructureResponse">
        <soap:body use="literal"></soap:body>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findCompoundsByNsc">
      <soap:operation soapAction="findCompoundsByNsc" style="document"></soap:operation>
      <wsdl:input name="findCompoundsByNsc">
        <soap:body use="literal"></soap:body>
      </wsdl:input>
      <wsdl:output name="findCompoundsByNscResponse">
        <soap:body use="literal"></soap:body>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findDrugTrackersBySmilesSubstructure">
      <soap:operation soapAction="findDrugTrackersBySmilesSubstructure" style="document"></soap:operation>
      <wsdl:input name="findDrugTrackersBySmilesSubstructure">
        <soap:body use="literal"></soap:body>
      </wsdl:input>
      <wsdl:output name="findDrugTrackersBySmilesSubstructureResponse">
        <soap:body use="literal"></soap:body>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findCmpdsBySmilesExactMatch">
      <soap:operation soapAction="findCmpdsBySmilesExactMatch" style="document"></soap:operation>
      <wsdl:input name="findCmpdsBySmilesExactMatch">
        <soap:body use="literal"></soap:body>
      </wsdl:input>
      <wsdl:output name="findCmpdsBySmilesExactMatchResponse">
        <soap:body use="literal"></soap:body>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findCmpdsByDiceSimilarity">
      <soap:operation soapAction="findCmpdsByDiceSimilarity" style="document"></soap:operation>
      <wsdl:input name="findCmpdsByDiceSimilarity">
        <soap:body use="literal"></soap:body>
      </wsdl:input>
      <wsdl:output name="findCmpdsByDiceSimilarityResponse">
        <soap:body use="literal"></soap:body>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findCmpdsBySmartsSubstructure">
      <soap:operation soapAction="findCmpdsBySmartsSubstructure" style="document"></soap:operation>
      <wsdl:input name="findCmpdsBySmartsSubstructure">
        <soap:body use="literal"></soap:body>
      </wsdl:input>
      <wsdl:output name="findCmpdsBySmartsSubstructureResponse">
        <soap:body use="literal"></soap:body>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findCmpdsByTanimotoSimilarity">
      <soap:operation soapAction="findCmpdsByTanimotoSimilarity" style="document"></soap:operation>
      <wsdl:input name="findCmpdsByTanimotoSimilarity">
        <soap:body use="literal"></soap:body>
      </wsdl:input>
      <wsdl:output name="findCmpdsByTanimotoSimilarityResponse">
        <soap:body use="literal"></soap:body>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findCompoundsBySmartsSubstructure">
      <soap:operation soapAction="findCompoundsBySmartsSubstructure" style="document"></soap:operation>
      <wsdl:input name="findCompoundsBySmartsSubstructure">
        <soap:body use="literal"></soap:body>
      </wsdl:input>
      <wsdl:output name="findCompoundsBySmartsSubstructureResponse">
        <soap:body use="literal"></soap:body>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="CompoundService">
    <wsdl:port binding="tns:CompoundServiceSoapBinding" name="CompoundService">
      <soap:address location="http://localhost:8080/novumservices-webservice/services/CompoundService"></soap:address>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>