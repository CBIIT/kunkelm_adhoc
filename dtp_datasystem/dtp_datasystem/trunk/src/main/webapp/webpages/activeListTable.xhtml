<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<ui:composition xmlns="http://www.w3.org/1999/xhtml"
                xmlns:ui="http://java.sun.com/jsf/facelets"      
                xmlns:p="http://primefaces.org/ui"
                xmlns:h="http://java.sun.com/jsf/html"
                xmlns:f="http://java.sun.com/jsf/core"
                xmlns:c="http://java.sun.com/jsp/jstl/core"
                xmlns:fn="http://java.sun.com/jsp/jstl/functions"
                template="/webpages/templates/ui.xhtml">

  <ui:define name="content title">
    <h:outputText value="Active List Table View #{listManagerController.listManagerBean.activeList.listName} with #{fn:length(listManagerController.listManagerBean.activeList.cmpdListMembers)} ListMembers" />  
  </ui:define>

  <ui:define name="instructions"/>

  <ui:define name="export"> 
    <h2 style="margin: 0;">
      <h:outputText value="Export Data or Images"/>
    </h2>
    <p:menubar>
      <p:menuitem ajax="false" value="Export to Excel">
        <p:dataExporter type="xls"  
                        target="activeListTbl" 
                        fileName="activeListTable" />  
      </p:menuitem>
      <p:menuitem ajax="false" value="Export as CSV">  
        <p:dataExporter type="csv" 
                        target="activeListTbl" 
                        fileName="activeListTable" />  
      </p:menuitem> 
      <p:menuitem value="Export Structures as Image"
                  ajax="true"
                  onclick="structuresAsGridImage()"/>
    </p:menubar>
  </ui:define>

  <ui:define name="alternate">
  </ui:define>

  <ui:define name="content">

    <!-- ensures that the filteredValues are reset whenever the page loads/reloads -->    

    <p:remoteCommand actionListener="#{listManagerController.handleSynchronizeFilters()}"
                     autoRun="true"/>

    <ui:include src="/webpages/templates/active_list_menu_bar.xhtml"/>

    <p:spacer height="20" width="100%"/>


    <p:panel header="List Anchor Structure"
             rendered="#{sessionController.configurationBean.showAnchor and !empty listManagerController.listManagerBean.activeList.anchorSmiles}">

      <h:outputText value="anchorSmiles: ${listManagerController.listManagerBean.activeList.anchorSmiles}"/>

      <br/>

      <p:graphicImage alt="Chemical Structure of List Anchor"
                      width="#{sessionController.configurationBean.strcDim}" 
                      height="#{sessionController.configurationBean.strcDim}"
                      styleClass="anchorStructure"
                      url='#{sessionController.configurationBean.getSmilesStrcUrl(listManagerController.listManagerBean.activeList.anchorSmiles)}'>              
      </p:graphicImage>

    </p:panel>

    <p:spacer height="20" width="100%"/>

    <p:dataTable  id="activeListTbl"
                  resizableColumns="true" 
                  draggableColumns="true"
                  draggableRows="true"
                  tableStyle="width: auto;"                 
                  widgetVar="activeListTblWidgetVar"
                  var="listMember"                       
                  value="#{listManagerController.listManagerBean.activeList.cmpdListMembers}" 
                  rows="50"                        
                  paginator="true"
                  paginatorPosition="top"
                  currentPageReportTemplate="Page: {currentPage}/{totalPages} Records: {startRecord}-{endRecord} out of {totalRecords} filtered records"
                  paginatorTemplate="{CurrentPageReport} {FirstPageLink} {PreviousPageLink} {PageLinks} {NextPageLink} {LastPageLink} {RowsPerPageDropdown} rows per page"  
                  rowsPerPageTemplate="50,100,250,500,1000,2000"
                  selection="#{listManagerController.listManagerBean.selectedActiveListMembers}"
                  filteredValue="#{listManagerController.listManagerBean.filteredActiveListMembers}"
                  rowKey="#{listMember.id}"                              
                  sortMode="multiple"
                  rowIndexVar="rowIdx">  

      <c:set var="cmpd" value="#{listMember.cmpd}" />
      <c:set var="strc" value="#{listMember.cmpd.parentFragment.cmpdFragmentStructure}" />
      <c:set var="physchem" value="#{listMember.cmpd.parentFragment.cmpdFragmentPChem}" />
      <c:set var="biodat" value="#{listMember.cmpd.cmpdBioAssay}" />

      <f:facet name="header">                
        <h:outputText value="List #{listManagerController.listManagerBean.activeList.listName} with #{fn:length(listManagerController.listManagerBean.activeList.cmpdListMembers)} Members"/>                    
      </f:facet>

      <p:column selectionMode="multiple" 
                style="width:4%" 
                exportable="false"/>

      <p:column headerText="NSC" 
                resizable="true"
                sortBy="#{cmpd.nsc}">                                
        <h:outputText value="#{cmpd.nsc}"/>
      </p:column>   

      <p:column headerText="DISCREET" 
                resizable="true"
                sortBy="#{cmpd.discreet}"
                filterBy="#{cmpd.discreet}"
                filterMatchMode="contains">                                
        <h:outputText value="#{cmpd.discreet}"/>
      </p:column>   

      <!--

      <p:column headerText="CONF" 
                resizable="true"
                sortBy="#{cmpd.conf}"
                filterBy="#{cmpd.conf}"
                filterMatchMode="contains">                                
        <h:outputText value="#{cmpd.conf}"/>
      </p:column>   

      <p:column headerText="DIST" 
                resizable="true"
                sortBy="#{cmpd.distribution}"
                filterBy="#{cmpd.distribution}"
                filterMatchMode="contains">                                
        <h:outputText value="#{cmpd.distribution}"/>
      </p:column> 
      
      -->

      <p:column headerText="NSCCmpdType"
                sortBy="#{cmpd.nscCmpdType}"
                filterBy="#{cmpd.nscCmpdType}"
                filterMatchMode="contains">
        <h:outputText value="#{cmpd.nscCmpdType}"/>
      </p:column>   

      <p:column headerText="Parent Structure" 
                resizable="true"
                exportable="false">

        <p:graphicImage alt="Chemical Structure of Parent Fragment"
                        width="#{sessionController.configurationBean.strcDim}" 
                        height="#{sessionController.configurationBean.strcDim}"
                        styleClass="parentStructure"
                        url='#{sessionController.configurationBean.getCmpdStrcUrl(listMember.cmpd, listManagerController.listManagerBean.activeList.anchorSmiles)}'>              

        </p:graphicImage>

        <br/>

        <p:commandButton  value="DETAILS"
                          update=":datasystemForm:ListMemberDetailsDialogPanel" 
                          oncomplete="PF('listMemberDetailDlg').show();" 
                          title="List Member Details"
                          style="display: inline-block;">  
          <f:setPropertyActionListener value="#{listMember}"   
                                       target="#{listManagerController.listManagerBean.selectedActiveListMember}" />  
        </p:commandButton>

        <p:commandButton value="SSS"
                         ajax="false" 
                         title="Substructure Search"
                         action="#{structureSearchController.landingPerformLoadEditorByNsc()}">

          <f:setPropertyActionListener value="#{cmpd.nsc}"   
                                       target="#{structureSearchController.nscForLoad}" />  

        </p:commandButton>

      </p:column>


      <!-- exportable alternate -->
      <p:column headerText="Parent SMILES"
                style="display: none;">
        <h:outputText value="#{listMember.cmpd.parentFragment.cmpdFragmentStructure.canSmi}"/>
      </p:column>

      <p:column exportable="false">
        <f:facet name="header">                
          <h:outputText escape="false" value="Compound and Parent&lt;br/&gt;Sort by Parent MW"/>                    
        </f:facet>          

        <p:panelGrid columns="3" style="width: auto;"> 
          <h:outputText value="PROD"/>            
          <h:outputText value="#{cmpd.prodMolecularFormula}"/>            
          <h:outputText value="#{cmpd.prodFormulaWeight}">            
            <f:convertNumber pattern="#0.00" />
          </h:outputText>

          <h:outputText value="CMPD"/>
          <h:outputText value="#{cmpd.formulaMolecularFormula}"/>
          <h:outputText value="#{cmpd.formulaWeight}">            
            <f:convertNumber pattern="#0.00" />
          </h:outputText>

          <h:outputText value="PARENT"/>            
          <h:outputText value="#{cmpd.parentMolecularFormula}"/>            
          <h:outputText value="#{cmpd.parentMolecularWeight}">            
            <f:convertNumber pattern="#0.00" />
          </h:outputText>
        </p:panelGrid>
        
      </p:column> 

      <!-- exportable alternates -->

      <p:column headerText="Prod Molecular Formula" 
                style="display: none;">
        <h:outputText value="#{cmpd.prodMolecularFormula}"/>
      </p:column> 

      <p:column headerText="Prod Formula Weight" 
                style="display: none;">
        <h:outputText value="#{cmpd.prodFormulaWeight}"/>
      </p:column> 

      <p:column headerText="Cmpd Molecular Formula" 
                style="display: none;">
        <h:outputText value="#{cmpd.formulaMolecularFormula}"/>
      </p:column> 

      <p:column headerText="Cmpd Formula Weight" 
                style="display: none;">
        <h:outputText value="#{cmpd.formulaWeight}"/>
      </p:column> 

      <p:column headerText="Parent Molecular Formula" 
                style="display: none;">
        <h:outputText value="#{cmpd.parentMolecularFormula}"/>
      </p:column> 

      <p:column headerText="Parent Molecular Weight" 
                style="display: none;">
        <h:outputText value="#{cmpd.parentMolecularWeight}"/>
      </p:column> 

      <p:column resizable="true"
                exportable="false"
                sortBy="#{cmpd.saltFragment.saltName}">  

        <f:facet name="header">                
          <h:outputText escape="false" value="Salt&lt;br/&gt;Sort by Salt Name"/>                    
        </f:facet>          
        <p:panelGrid columns="2" style="width: auto;">
          <h:outputText value="Name"/>
          <h:outputText value="#{cmpd.saltFragment.saltName.length() gt 50 ? cmpd.saltFragment.saltName.substring(0,49) : cmpd.saltFragment.saltName}" />
          <h:outputText value="MF"/>
          <h:outputText value="#{cmpd.saltFragment.saltMf}"/>
          <h:outputText value="MW"/>
          <h:outputText value="#{cmpd.saltFragment.saltMw}"/>
        </p:panelGrid>
      </p:column> 

      <!-- exportable alternates -->

      <p:column headerText="Salt Name" 
                style="display: none;">
        <h:outputText value="#{cmpd.saltFragment.saltName}"/>
      </p:column> 

      <p:column headerText="Salt MF" 
                style="display: none;">
        <h:outputText value="#{cmpd.saltFragment.saltMf}"/>
      </p:column> 

      <p:column headerText="Salt MW" 
                style="display: none;">
        <h:outputText value="#{cmpd.saltFragment.saltMw}"/>
      </p:column> 

      <p:column headerText="Fragments" 
                rendered="#{sessionController.configurationBean.showFrags}">

        <p:dataGrid columns="3" layout="grid"
                    value="#{cmpd.cmpdFragmentSmilesStrings}" 
                    var="fragSmiles">
          <p:graphicImage alt="Chemical Structure of Compound Fragment"
                          width="#{sessionController.configurationBean.strcDim}" 
                          height="#{sessionController.configurationBean.strcDim}"
                          styleClass="fragmentStructure"
                          url='#{sessionController.configurationBean.getSmilesStrcUrl(fragSmiles)}'>              
          </p:graphicImage>
        </p:dataGrid>
      </p:column>    

      <p:column headerText="mtxt" 
                resizable="true"
                rendered="#{sessionController.configurationBean.showQc}"
                width="50"                          
                filterBy="#{cmpd.cmpdAnnotation.mtxt}"
                filterMatchMode="contains"
                style="text-wrap: normal; white-space: normal;">
        <h:outputText value="#{cmpd.cmpdAnnotation.mtxt}"/>
      </p:column>

      <p:column headerText="pseudo atoms"
                resizable="true"
                rendered="#{sessionController.configurationBean.showQc}"
                width="50"
                filterBy="#{cmpd.cmpdAnnotation.pseudoAtoms}"
                filterMatchMode="contains"
                style="text-wrap: normal; white-space: normal;">
        <h:outputText value="#{cmpd.cmpdAnnotation.pseudoAtoms}"/>
      </p:column>

      <!-- webpage display, exportable="false" -->

      <p:columns resizable="true"  
                 exportable="false"
                 width="50"
                 value="#{sessionController.configurationBean.cmpdColumns}" 
                 var="column" 
                 columnIndexVar="colIndex"
                 sortable="#{column.property ne 'aliases' and column.property ne 'projects' and column.property ne 'plates' and column.property ne 'targets'}"
                 sortBy="#{cmpd[column.property]}" 
                 filterBy="#{cmpd[column.property]}"
                 filterFunction="#{customFilter.customFilter}">

        <f:facet name="header">                        
          <h:outputText value="#{column.header}" />
        </f:facet>

        <h:outputText rendered="#{column.property ne 'aliases' and column.property ne 'projects' and column.property ne 'plates' and column.property ne 'targets'}"
                      value="#{cmpd[column.property]}"/>

        <p:dataList rendered="#{column.property eq 'aliases' or column.property eq 'projects' or column.property eq 'plates' or column.property eq 'targets'}"
                    var="prop" 
                    value="#{cmpd[column.property]}"
                    rows="5" 
                    paginator="true"
                    paginatorPosition="top" 
                    paginatorAlwaysVisible="false"
                    currentPageReportTemplate="Page: {currentPage}/{totalPages} Records: {startRecord}-{endRecord} out of {totalRecords}"
                    paginatorTemplate="{CurrentPageReport} {PreviousPageLink} {NextPageLink}">

          <h:outputText value="#{prop.length() gt 50 ? prop.substring(0,49).concat('...') : prop}" />
        </p:dataList>

      </p:columns>

      <!-- exportable data, display: none; -->

      <p:columns style="display: none;"
                 resizable="true"  
                 value="#{sessionController.configurationBean.cmpdColumns}" 
                 var="column" 
                 columnIndexVar="colIndex" 
                 sortBy="#{cmpd[column.property]}" 
                 filterBy="#{cmpd[column.property]}">

        <f:facet name="header">                        
          <h:outputText value="#{column.header}" />
        </f:facet>                      

        <h:outputText value="#{cmpd[column.property]}"/>

      </p:columns>

      <p:columns resizable="true" 
                 value="#{sessionController.configurationBean.structureColumns}" 
                 var="column" 
                 columnIndexVar="colIndex" 
                 sortBy="#{strc[column.property]}" 
                 filterBy="#{strc[column.property]}">
        <f:facet name="header">
          <h:outputText value="#{column.header}" />
        </f:facet>
        <h:outputText value="#{strc[column.property]}" />
      </p:columns>

      <p:columns resizable="true" 
                 value="#{sessionController.configurationBean.physChemColumns}" 
                 var="column" 
                 columnIndexVar="colIndex" 
                 sortBy="#{physchem[column.property]}" 
                 filterBy="#{physchem[column.property]}">
        <f:facet name="header">
          <h:outputText value="#{column.header}" />
        </f:facet>
        <h:outputText value="#{physchem[column.property]}" />
      </p:columns>

      <p:columns resizable="true" 
                 value="#{sessionController.configurationBean.biodataColumns}" 
                 var="column" 
                 columnIndexVar="colIndex" 
                 sortBy="#{biodat[column.property]}" 
                 filterBy="#{biodat[column.property]}">
        <f:facet name="header">
          <h:outputText value="#{column.header}" />
        </f:facet>
        <h:outputText value="#{biodat[column.property]}" />
      </p:columns>

    </p:dataTable>

  </ui:define>

</ui:composition>