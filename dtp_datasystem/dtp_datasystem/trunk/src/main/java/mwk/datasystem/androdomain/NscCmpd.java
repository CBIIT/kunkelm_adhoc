// license-header java merge-point
//
// Attention: Generated code! Do not modify by hand!
// Generated by: hibernate/HibernateEntity.vsl in andromda-hibernate-cartridge.
//
package mwk.datasystem.androdomain;

import java.util.Collection;
import java.util.HashSet;

/**
 * 
 */
// HibernateEntity.vsl annotations merge-point
public abstract class NscCmpd
    extends CmpdImpl
{
    /**
     * The serial version UID of this class. Needed for serialization.
     */
    private static final long serialVersionUID = 2501864487143379417L;

    // Generate 7 attributes
    private String name;

    /**
     * 
     * @return this.name String
     */
    public String getName()
    {
        return this.name;
    }

    /**
     * 
     * @param nameIn String
     */
    public void setName(String nameIn)
    {
        this.name = nameIn;
    }

    private Long nscCmpdId;

    /**
     * 
     * @return this.nscCmpdId Long
     */
    public Long getNscCmpdId()
    {
        return this.nscCmpdId;
    }

    /**
     * 
     * @param nscCmpdIdIn Long
     */
    public void setNscCmpdId(Long nscCmpdIdIn)
    {
        this.nscCmpdId = nscCmpdIdIn;
    }

    private String prefix;

    /**
     * 
     * @return this.prefix String
     */
    public String getPrefix()
    {
        return this.prefix;
    }

    /**
     * 
     * @param prefixIn String
     */
    public void setPrefix(String prefixIn)
    {
        this.prefix = prefixIn;
    }

    private Integer nsc;

    /**
     * 
     * @return this.nsc Integer
     */
    public Integer getNsc()
    {
        return this.nsc;
    }

    /**
     * 
     * @param nscIn Integer
     */
    public void setNsc(Integer nscIn)
    {
        this.nsc = nscIn;
    }

    private String conf;

    /**
     * 
     * @return this.conf String
     */
    public String getConf()
    {
        return this.conf;
    }

    /**
     * 
     * @param confIn String
     */
    public void setConf(String confIn)
    {
        this.conf = confIn;
    }

    private String distribution;

    /**
     * 
     * @return this.distribution String
     */
    public String getDistribution()
    {
        return this.distribution;
    }

    /**
     * 
     * @param distributionIn String
     */
    public void setDistribution(String distributionIn)
    {
        this.distribution = distributionIn;
    }

    private String cas;

    /**
     * 
     * @return this.cas String
     */
    public String getCas()
    {
        return this.cas;
    }

    /**
     * 
     * @param casIn String
     */
    public void setCas(String casIn)
    {
        this.cas = casIn;
    }

    // Generate 12 associations
    private Collection<CmpdProject> cmpdProjects = new HashSet<CmpdProject>();

    /**
     * 
     * @return this.cmpdProjects Collection<CmpdProject>
     */
    public Collection<CmpdProject> getCmpdProjects()
    {
        return this.cmpdProjects;
    }

    /**
     * 
     * @param cmpdProjectsIn Collection<CmpdProject>
     */
    public void setCmpdProjects(Collection<CmpdProject> cmpdProjectsIn)
    {
        this.cmpdProjects = cmpdProjectsIn;
    }

    /**
     * 
     * @param elementToAdd CmpdProject
     * @return <tt>true</tt> if this collection changed as a result of the
     *         call
     */
    public boolean addCmpdProjects(CmpdProject elementToAdd)
    {
        return this.cmpdProjects.add(elementToAdd);
    }

    /**
     * 
     * @param elementToRemove CmpdProject
     * @return <tt>true</tt> if this collection changed as a result of the
     *         call
     */
    public boolean removeCmpdProjects(CmpdProject elementToRemove)
    {
        return this.cmpdProjects.remove(elementToRemove);
    }

    private CmpdFragment cmpdParentFragment;

    /**
     * 
     * @return this.cmpdParentFragment CmpdFragment
     */
    public CmpdFragment getCmpdParentFragment()
    {
        return this.cmpdParentFragment;
    }

    /**
     * 
     * @param cmpdParentFragmentIn CmpdFragment
     */
    public void setCmpdParentFragment(CmpdFragment cmpdParentFragmentIn)
    {
        this.cmpdParentFragment = cmpdParentFragmentIn;
    }

    private Collection<CmpdAlias> cmpdAliases = new HashSet<CmpdAlias>();

    /**
     * 
     * @return this.cmpdAliases Collection<CmpdAlias>
     */
    public Collection<CmpdAlias> getCmpdAliases()
    {
        return this.cmpdAliases;
    }

    /**
     * 
     * @param cmpdAliasesIn Collection<CmpdAlias>
     */
    public void setCmpdAliases(Collection<CmpdAlias> cmpdAliasesIn)
    {
        this.cmpdAliases = cmpdAliasesIn;
    }

    /**
     * 
     * @param elementToAdd CmpdAlias
     * @return <tt>true</tt> if this collection changed as a result of the
     *         call
     */
    public boolean addCmpdAliases(CmpdAlias elementToAdd)
    {
        return this.cmpdAliases.add(elementToAdd);
    }

    /**
     * 
     * @param elementToRemove CmpdAlias
     * @return <tt>true</tt> if this collection changed as a result of the
     *         call
     */
    public boolean removeCmpdAliases(CmpdAlias elementToRemove)
    {
        return this.cmpdAliases.remove(elementToRemove);
    }

    private CmpdBioAssay cmpdBioAssay;

    /**
     * 
     * @return this.cmpdBioAssay CmpdBioAssay
     */
    public CmpdBioAssay getCmpdBioAssay()
    {
        return this.cmpdBioAssay;
    }

    /**
     * 
     * @param cmpdBioAssayIn CmpdBioAssay
     */
    public void setCmpdBioAssay(CmpdBioAssay cmpdBioAssayIn)
    {
        this.cmpdBioAssay = cmpdBioAssayIn;
    }

    private Collection<CmpdPubChemSid> cmpdPubChemSids = new HashSet<CmpdPubChemSid>();

    /**
     * 
     * @return this.cmpdPubChemSids Collection<CmpdPubChemSid>
     */
    public Collection<CmpdPubChemSid> getCmpdPubChemSids()
    {
        return this.cmpdPubChemSids;
    }

    /**
     * 
     * @param cmpdPubChemSidsIn Collection<CmpdPubChemSid>
     */
    public void setCmpdPubChemSids(Collection<CmpdPubChemSid> cmpdPubChemSidsIn)
    {
        this.cmpdPubChemSids = cmpdPubChemSidsIn;
    }

    /**
     * 
     * @param elementToAdd CmpdPubChemSid
     * @return <tt>true</tt> if this collection changed as a result of the
     *         call
     */
    public boolean addCmpdPubChemSids(CmpdPubChemSid elementToAdd)
    {
        return this.cmpdPubChemSids.add(elementToAdd);
    }

    /**
     * 
     * @param elementToRemove CmpdPubChemSid
     * @return <tt>true</tt> if this collection changed as a result of the
     *         call
     */
    public boolean removeCmpdPubChemSids(CmpdPubChemSid elementToRemove)
    {
        return this.cmpdPubChemSids.remove(elementToRemove);
    }

    private Collection<CmpdFragment> cmpdFragments = new HashSet<CmpdFragment>();

    /**
     * 
     * @return this.cmpdFragments Collection<CmpdFragment>
     */
    public Collection<CmpdFragment> getCmpdFragments()
    {
        return this.cmpdFragments;
    }

    /**
     * 
     * @param cmpdFragmentsIn Collection<CmpdFragment>
     */
    public void setCmpdFragments(Collection<CmpdFragment> cmpdFragmentsIn)
    {
        this.cmpdFragments = cmpdFragmentsIn;
    }

    /**
     * 
     * @param elementToAdd CmpdFragment
     * @return <tt>true</tt> if this collection changed as a result of the
     *         call
     */
    public boolean addCmpdFragments(CmpdFragment elementToAdd)
    {
        return this.cmpdFragments.add(elementToAdd);
    }

    /**
     * 
     * @param elementToRemove CmpdFragment
     * @return <tt>true</tt> if this collection changed as a result of the
     *         call
     */
    public boolean removeCmpdFragments(CmpdFragment elementToRemove)
    {
        return this.cmpdFragments.remove(elementToRemove);
    }

    private Collection<CmpdRelated> cmpdRelateds = new HashSet<CmpdRelated>();

    /**
     * 
     * @return this.cmpdRelateds Collection<CmpdRelated>
     */
    public Collection<CmpdRelated> getCmpdRelateds()
    {
        return this.cmpdRelateds;
    }

    /**
     * 
     * @param cmpdRelatedsIn Collection<CmpdRelated>
     */
    public void setCmpdRelateds(Collection<CmpdRelated> cmpdRelatedsIn)
    {
        this.cmpdRelateds = cmpdRelatedsIn;
    }

    /**
     * 
     * @param elementToAdd CmpdRelated
     * @return <tt>true</tt> if this collection changed as a result of the
     *         call
     */
    public boolean addCmpdRelateds(CmpdRelated elementToAdd)
    {
        return this.cmpdRelateds.add(elementToAdd);
    }

    /**
     * 
     * @param elementToRemove CmpdRelated
     * @return <tt>true</tt> if this collection changed as a result of the
     *         call
     */
    public boolean removeCmpdRelateds(CmpdRelated elementToRemove)
    {
        return this.cmpdRelateds.remove(elementToRemove);
    }

    private Collection<CmpdInventory> cmpdInventories = new HashSet<CmpdInventory>();

    /**
     * 
     * @return this.cmpdInventories Collection<CmpdInventory>
     */
    public Collection<CmpdInventory> getCmpdInventories()
    {
        return this.cmpdInventories;
    }

    /**
     * 
     * @param cmpdInventoriesIn Collection<CmpdInventory>
     */
    public void setCmpdInventories(Collection<CmpdInventory> cmpdInventoriesIn)
    {
        this.cmpdInventories = cmpdInventoriesIn;
    }

    /**
     * 
     * @param elementToAdd CmpdInventory
     * @return <tt>true</tt> if this collection changed as a result of the
     *         call
     */
    public boolean addCmpdInventories(CmpdInventory elementToAdd)
    {
        return this.cmpdInventories.add(elementToAdd);
    }

    /**
     * 
     * @param elementToRemove CmpdInventory
     * @return <tt>true</tt> if this collection changed as a result of the
     *         call
     */
    public boolean removeCmpdInventories(CmpdInventory elementToRemove)
    {
        return this.cmpdInventories.remove(elementToRemove);
    }

    private Collection<CmpdTarget> cmpdTargets = new HashSet<CmpdTarget>();

    /**
     * 
     * @return this.cmpdTargets Collection<CmpdTarget>
     */
    public Collection<CmpdTarget> getCmpdTargets()
    {
        return this.cmpdTargets;
    }

    /**
     * 
     * @param cmpdTargetsIn Collection<CmpdTarget>
     */
    public void setCmpdTargets(Collection<CmpdTarget> cmpdTargetsIn)
    {
        this.cmpdTargets = cmpdTargetsIn;
    }

    /**
     * 
     * @param elementToAdd CmpdTarget
     * @return <tt>true</tt> if this collection changed as a result of the
     *         call
     */
    public boolean addCmpdTargets(CmpdTarget elementToAdd)
    {
        return this.cmpdTargets.add(elementToAdd);
    }

    /**
     * 
     * @param elementToRemove CmpdTarget
     * @return <tt>true</tt> if this collection changed as a result of the
     *         call
     */
    public boolean removeCmpdTargets(CmpdTarget elementToRemove)
    {
        return this.cmpdTargets.remove(elementToRemove);
    }

    private Collection<CmpdPlate> cmpdPlates = new HashSet<CmpdPlate>();

    /**
     * 
     * @return this.cmpdPlates Collection<CmpdPlate>
     */
    public Collection<CmpdPlate> getCmpdPlates()
    {
        return this.cmpdPlates;
    }

    /**
     * 
     * @param cmpdPlatesIn Collection<CmpdPlate>
     */
    public void setCmpdPlates(Collection<CmpdPlate> cmpdPlatesIn)
    {
        this.cmpdPlates = cmpdPlatesIn;
    }

    /**
     * 
     * @param elementToAdd CmpdPlate
     * @return <tt>true</tt> if this collection changed as a result of the
     *         call
     */
    public boolean addCmpdPlates(CmpdPlate elementToAdd)
    {
        return this.cmpdPlates.add(elementToAdd);
    }

    /**
     * 
     * @param elementToRemove CmpdPlate
     * @return <tt>true</tt> if this collection changed as a result of the
     *         call
     */
    public boolean removeCmpdPlates(CmpdPlate elementToRemove)
    {
        return this.cmpdPlates.remove(elementToRemove);
    }

    private Collection<CmpdSet> cmpdSets = new HashSet<CmpdSet>();

    /**
     * 
     * @return this.cmpdSets Collection<CmpdSet>
     */
    public Collection<CmpdSet> getCmpdSets()
    {
        return this.cmpdSets;
    }

    /**
     * 
     * @param cmpdSetsIn Collection<CmpdSet>
     */
    public void setCmpdSets(Collection<CmpdSet> cmpdSetsIn)
    {
        this.cmpdSets = cmpdSetsIn;
    }

    /**
     * 
     * @param elementToAdd CmpdSet
     * @return <tt>true</tt> if this collection changed as a result of the
     *         call
     */
    public boolean addCmpdSets(CmpdSet elementToAdd)
    {
        return this.cmpdSets.add(elementToAdd);
    }

    /**
     * 
     * @param elementToRemove CmpdSet
     * @return <tt>true</tt> if this collection changed as a result of the
     *         call
     */
    public boolean removeCmpdSets(CmpdSet elementToRemove)
    {
        return this.cmpdSets.remove(elementToRemove);
    }

    /**
     * This entity does not have any identifiers
     * but since it extends the <code>CmpdImpl</code> class
     * it will simply delegate the call up there.
     *
     * @see mwk.dctddata.domain.Cmpd#equals(Object)
     */
    @Override
    public boolean equals(Object object)
    {
        return super.equals(object);
    }

    /**
     * This entity does not have any identifiers
     * but since it extends the <code>CmpdImpl</code> class
     * it will simply delegate the call up there.
     *
     * @see mwk.dctddata.domain.Cmpd#hashCode()
     */
    @Override
    public int hashCode()
    {
        return super.hashCode();
    }

    /**
     * Constructs new instances of {@link NscCmpd}.
     */
    public static final class Factory
    {
        /**
         * Constructs a new instance of {@link NscCmpd}.
         * @return new NscCmpdImpl()
         */
        public static NscCmpd newInstance()
        {
            return new NscCmpdImpl();
        }

        /**
         * Constructs a new instance of {@link NscCmpd}, taking all required and/or
         * read-only properties as arguments, except for identifiers.
         * @param prefix String
         * @param conf String
         * @param distribution String
         * @return newInstance
         */
        public static NscCmpd newInstance(String prefix, String conf, String distribution)
        {
            final NscCmpd entity = new NscCmpdImpl();
            entity.setPrefix(prefix);
            entity.setConf(conf);
            entity.setDistribution(distribution);
            return entity;
        }

        /**
         * Constructs a new instance of {@link NscCmpd}, taking all possible properties
         * (except the identifier(s))as arguments.
         * @param cmpdListMembers Collection<CmpdListMember>
         * @param name String
         * @param nscCmpdId Long
         * @param prefix String
         * @param nsc Integer
         * @param conf String
         * @param distribution String
         * @param cas String
         * @param cmpdProjects Collection<CmpdProject>
         * @param cmpdParentFragment CmpdFragment
         * @param cmpdAliases Collection<CmpdAlias>
         * @param cmpdBioAssay CmpdBioAssay
         * @param cmpdPubChemSids Collection<CmpdPubChemSid>
         * @param cmpdFragments Collection<CmpdFragment>
         * @param cmpdRelateds Collection<CmpdRelated>
         * @param cmpdInventories Collection<CmpdInventory>
         * @param cmpdTargets Collection<CmpdTarget>
         * @param cmpdPlates Collection<CmpdPlate>
         * @param cmpdSets Collection<CmpdSet>
         * @return newInstance NscCmpd
         */
        public static NscCmpd newInstance(Collection<CmpdListMember> cmpdListMembers, String name, Long nscCmpdId, String prefix, Integer nsc, String conf, String distribution, String cas, Collection<CmpdProject> cmpdProjects, CmpdFragment cmpdParentFragment, Collection<CmpdAlias> cmpdAliases, CmpdBioAssay cmpdBioAssay, Collection<CmpdPubChemSid> cmpdPubChemSids, Collection<CmpdFragment> cmpdFragments, Collection<CmpdRelated> cmpdRelateds, Collection<CmpdInventory> cmpdInventories, Collection<CmpdTarget> cmpdTargets, Collection<CmpdPlate> cmpdPlates, Collection<CmpdSet> cmpdSets)
        {
            final NscCmpd entity = new NscCmpdImpl();
            entity.setCmpdListMembers(cmpdListMembers);
            entity.setName(name);
            entity.setNscCmpdId(nscCmpdId);
            entity.setPrefix(prefix);
            entity.setNsc(nsc);
            entity.setConf(conf);
            entity.setDistribution(distribution);
            entity.setCas(cas);
            entity.setCmpdProjects(cmpdProjects);
            entity.setCmpdParentFragment(cmpdParentFragment);
            entity.setCmpdAliases(cmpdAliases);
            entity.setCmpdBioAssay(cmpdBioAssay);
            entity.setCmpdPubChemSids(cmpdPubChemSids);
            entity.setCmpdFragments(cmpdFragments);
            entity.setCmpdRelateds(cmpdRelateds);
            entity.setCmpdInventories(cmpdInventories);
            entity.setCmpdTargets(cmpdTargets);
            entity.setCmpdPlates(cmpdPlates);
            entity.setCmpdSets(cmpdSets);
            return entity;
        }
    }

    /**
     * @see Comparable#compareTo
     */
    public int compareTo(NscCmpd o)
    {
        int cmp = 0;
        if (this.getId() != null)
        {
            cmp = this.getId().compareTo(o.getId());
        }
        else
        {
            if (this.getName() != null)
            {
                cmp = (cmp != 0 ? cmp : this.getName().compareTo(o.getName()));
            }
            if (this.getNscCmpdId() != null)
            {
                cmp = (cmp != 0 ? cmp : this.getNscCmpdId().compareTo(o.getNscCmpdId()));
            }
            if (this.getPrefix() != null)
            {
                cmp = (cmp != 0 ? cmp : this.getPrefix().compareTo(o.getPrefix()));
            }
            if (this.getNsc() != null)
            {
                cmp = (cmp != 0 ? cmp : this.getNsc().compareTo(o.getNsc()));
            }
            if (this.getConf() != null)
            {
                cmp = (cmp != 0 ? cmp : this.getConf().compareTo(o.getConf()));
            }
            if (this.getDistribution() != null)
            {
                cmp = (cmp != 0 ? cmp : this.getDistribution().compareTo(o.getDistribution()));
            }
            if (this.getCas() != null)
            {
                cmp = (cmp != 0 ? cmp : this.getCas().compareTo(o.getCas()));
            }
        }
        return cmp;
    }
// HibernateEntity.vsl merge-point
}