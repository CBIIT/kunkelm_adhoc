// license-header java merge-point
//
// Attention: Generated code! Do not modify by hand!
// Generated by: hibernate/HibernateEntity.vsl in andromda-hibernate-cartridge.
//
package mwk.datasystem.domain;

import java.io.Serializable;
import java.util.Collection;
import java.util.Date;
import java.util.HashSet;

/**
 * 
 */
// HibernateEntity.vsl annotations merge-point
public abstract class CmpdList
    implements Serializable, Comparable<CmpdList>
{
    /**
     * The serial version UID of this class. Needed for serialization.
     */
    private static final long serialVersionUID = -4411415242228169065L;

    // Generate 10 attributes
    private String listName;

    /**
     * 
     * @return this.listName String
     */
    public String getListName()
    {
        return this.listName;
    }

    /**
     * 
     * @param listNameIn String
     */
    public void setListName(String listNameIn)
    {
        this.listName = listNameIn;
    }

    private Date dateCreated;

    /**
     * 
     * @return this.dateCreated Date
     */
    public Date getDateCreated()
    {
        return this.dateCreated;
    }

    /**
     * 
     * @param dateCreatedIn Date
     */
    public void setDateCreated(Date dateCreatedIn)
    {
        this.dateCreated = dateCreatedIn;
    }

    private String listOwner;

    /**
     * 
     * @return this.listOwner String
     */
    public String getListOwner()
    {
        return this.listOwner;
    }

    /**
     * 
     * @param listOwnerIn String
     */
    public void setListOwner(String listOwnerIn)
    {
        this.listOwner = listOwnerIn;
    }

    private String shareWith;

    /**
     * 
     * @return this.shareWith String
     */
    public String getShareWith()
    {
        return this.shareWith;
    }

    /**
     * 
     * @param shareWithIn String
     */
    public void setShareWith(String shareWithIn)
    {
        this.shareWith = shareWithIn;
    }

    private Long cmpdListId;

    /**
     * 
     * @return this.cmpdListId Long
     */
    public Long getCmpdListId()
    {
        return this.cmpdListId;
    }

    /**
     * 
     * @param cmpdListIdIn Long
     */
    public void setCmpdListId(Long cmpdListIdIn)
    {
        this.cmpdListId = cmpdListIdIn;
    }

    private Integer countListMembers;

    /**
     * 
     * @return this.countListMembers Integer
     */
    public Integer getCountListMembers()
    {
        return this.countListMembers;
    }

    /**
     * 
     * @param countListMembersIn Integer
     */
    public void setCountListMembers(Integer countListMembersIn)
    {
        this.countListMembers = countListMembersIn;
    }

    private String anchorSmiles;

    /**
     * 
     * @return this.anchorSmiles String
     */
    public String getAnchorSmiles()
    {
        return this.anchorSmiles;
    }

    /**
     * 
     * @param anchorSmilesIn String
     */
    public void setAnchorSmiles(String anchorSmilesIn)
    {
        this.anchorSmiles = anchorSmilesIn;
    }

    private String listComment;

    /**
     * 
     * @return this.listComment String
     */
    public String getListComment()
    {
        return this.listComment;
    }

    /**
     * 
     * @param listCommentIn String
     */
    public void setListComment(String listCommentIn)
    {
        this.listComment = listCommentIn;
    }

    private String anchorComment;

    /**
     * 
     * @return this.anchorComment String
     */
    public String getAnchorComment()
    {
        return this.anchorComment;
    }

    /**
     * 
     * @param anchorCommentIn String
     */
    public void setAnchorComment(String anchorCommentIn)
    {
        this.anchorComment = anchorCommentIn;
    }

    private Long id;

    /**
     * 
     * @return this.id Long
     */
    public Long getId()
    {
        return this.id;
    }

    /**
     * 
     * @param idIn Long
     */
    public void setId(Long idIn)
    {
        this.id = idIn;
    }

    // Generate 1 associations
    private Collection<CmpdListMember> cmpdListMembers = new HashSet<CmpdListMember>();

    /**
     * 
     * @return this.cmpdListMembers Collection<CmpdListMember>
     */
    public Collection<CmpdListMember> getCmpdListMembers()
    {
        return this.cmpdListMembers;
    }

    /**
     * 
     * @param cmpdListMembersIn Collection<CmpdListMember>
     */
    public void setCmpdListMembers(Collection<CmpdListMember> cmpdListMembersIn)
    {
        this.cmpdListMembers = cmpdListMembersIn;
    }

    /**
     * 
     * @param elementToAdd CmpdListMember
     * @return <tt>true</tt> if this collection changed as a result of the
     *         call
     */
    public boolean addCmpdListMembers(CmpdListMember elementToAdd)
    {
        return this.cmpdListMembers.add(elementToAdd);
    }

    /**
     * 
     * @param elementToRemove CmpdListMember
     * @return <tt>true</tt> if this collection changed as a result of the
     *         call
     */
    public boolean removeCmpdListMembers(CmpdListMember elementToRemove)
    {
        return this.cmpdListMembers.remove(elementToRemove);
    }

    /**
     * Returns <code>true</code> if the argument is an CmpdList instance and all identifiers for this entity
     * equal the identifiers of the argument entity. Returns <code>false</code> otherwise.
     */
    @Override
    public boolean equals(Object object)
    {
        if (this == object)
        {
            return true;
        }
        if (!(object instanceof CmpdList))
        {
            return false;
        }
        final CmpdList that = (CmpdList)object;
        if (this.id == null || that.getId() == null || !this.id.equals(that.getId()))
        {
            return false;
        }
        return true;
    }

    /**
     * Returns a hash code based on this entity's identifiers.
     */
    @Override
    public int hashCode()
    {
        int hashCode = 0;
        hashCode = 29 * hashCode + (this.id == null ? 0 : this.id.hashCode());

        return hashCode;
    }

    /**
     * Constructs new instances of {@link CmpdList}.
     */
    public static final class Factory
    {
        /**
         * Constructs a new instance of {@link CmpdList}.
         * @return new CmpdListImpl()
         */
        public static CmpdList newInstance()
        {
            return new CmpdListImpl();
        }

        /**
         * Constructs a new instance of {@link CmpdList}, taking all required and/or
         * read-only properties as arguments, except for identifiers.
         * @param listName String
         * @param dateCreated Date
         * @param listOwner String
         * @param shareWith String
         * @return newInstance
         */
        public static CmpdList newInstance(String listName, Date dateCreated, String listOwner, String shareWith)
        {
            final CmpdList entity = new CmpdListImpl();
            entity.setListName(listName);
            entity.setDateCreated(dateCreated);
            entity.setListOwner(listOwner);
            entity.setShareWith(shareWith);
            return entity;
        }

        /**
         * Constructs a new instance of {@link CmpdList}, taking all possible properties
         * (except the identifier(s))as arguments.
         * @param listName String
         * @param dateCreated Date
         * @param listOwner String
         * @param shareWith String
         * @param cmpdListId Long
         * @param countListMembers Integer
         * @param anchorSmiles String
         * @param listComment String
         * @param anchorComment String
         * @param cmpdListMembers Collection<CmpdListMember>
         * @return newInstance CmpdList
         */
        public static CmpdList newInstance(String listName, Date dateCreated, String listOwner, String shareWith, Long cmpdListId, Integer countListMembers, String anchorSmiles, String listComment, String anchorComment, Collection<CmpdListMember> cmpdListMembers)
        {
            final CmpdList entity = new CmpdListImpl();
            entity.setListName(listName);
            entity.setDateCreated(dateCreated);
            entity.setListOwner(listOwner);
            entity.setShareWith(shareWith);
            entity.setCmpdListId(cmpdListId);
            entity.setCountListMembers(countListMembers);
            entity.setAnchorSmiles(anchorSmiles);
            entity.setListComment(listComment);
            entity.setAnchorComment(anchorComment);
            entity.setCmpdListMembers(cmpdListMembers);
            return entity;
        }
    }

    /**
     * @see Comparable#compareTo
     */
    public int compareTo(CmpdList o)
    {
        int cmp = 0;
        if (this.getId() != null)
        {
            cmp = this.getId().compareTo(o.getId());
        }
        else
        {
            if (this.getListName() != null)
            {
                cmp = (cmp != 0 ? cmp : this.getListName().compareTo(o.getListName()));
            }
            if (this.getDateCreated() != null)
            {
                cmp = (cmp != 0 ? cmp : this.getDateCreated().compareTo(o.getDateCreated()));
            }
            if (this.getListOwner() != null)
            {
                cmp = (cmp != 0 ? cmp : this.getListOwner().compareTo(o.getListOwner()));
            }
            if (this.getShareWith() != null)
            {
                cmp = (cmp != 0 ? cmp : this.getShareWith().compareTo(o.getShareWith()));
            }
            if (this.getCmpdListId() != null)
            {
                cmp = (cmp != 0 ? cmp : this.getCmpdListId().compareTo(o.getCmpdListId()));
            }
            if (this.getCountListMembers() != null)
            {
                cmp = (cmp != 0 ? cmp : this.getCountListMembers().compareTo(o.getCountListMembers()));
            }
            if (this.getAnchorSmiles() != null)
            {
                cmp = (cmp != 0 ? cmp : this.getAnchorSmiles().compareTo(o.getAnchorSmiles()));
            }
            if (this.getListComment() != null)
            {
                cmp = (cmp != 0 ? cmp : this.getListComment().compareTo(o.getListComment()));
            }
            if (this.getAnchorComment() != null)
            {
                cmp = (cmp != 0 ? cmp : this.getAnchorComment().compareTo(o.getAnchorComment()));
            }
        }
        return cmp;
    }
// HibernateEntity.vsl merge-point
}