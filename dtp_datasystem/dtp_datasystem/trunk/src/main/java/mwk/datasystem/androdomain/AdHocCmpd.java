// license-header java merge-point
//
// Attention: Generated code! Do not modify by hand!
// Generated by: hibernate/HibernateEntity.vsl in andromda-hibernate-cartridge.
//
package mwk.datasystem.androdomain;

import java.util.Collection;
import java.util.HashSet;

/**
 * 
 */
// HibernateEntity.vsl annotations merge-point
public abstract class AdHocCmpd
    extends CmpdImpl
{
    /**
     * The serial version UID of this class. Needed for serialization.
     */
    private static final long serialVersionUID = -67303458523514886L;

    // Generate 4 attributes
    private String cmpdOwner;

    /**
     * 
     * @return this.cmpdOwner String
     */
    public String getCmpdOwner()
    {
        return this.cmpdOwner;
    }

    /**
     * 
     * @param cmpdOwnerIn String
     */
    public void setCmpdOwner(String cmpdOwnerIn)
    {
        this.cmpdOwner = cmpdOwnerIn;
    }

    private Long adHocCmpdId;

    /**
     * 
     * @return this.adHocCmpdId Long
     */
    public Long getAdHocCmpdId()
    {
        return this.adHocCmpdId;
    }

    /**
     * 
     * @param adHocCmpdIdIn Long
     */
    public void setAdHocCmpdId(Long adHocCmpdIdIn)
    {
        this.adHocCmpdId = adHocCmpdIdIn;
    }

    private String name;

    /**
     * 
     * @return this.name String
     */
    public String getName()
    {
        return this.name;
    }

    /**
     * 
     * @param nameIn String
     */
    public void setName(String nameIn)
    {
        this.name = nameIn;
    }

    private Long originalAdHocCmpdId;

    /**
     * 
     * @return this.originalAdHocCmpdId Long
     */
    public Long getOriginalAdHocCmpdId()
    {
        return this.originalAdHocCmpdId;
    }

    /**
     * 
     * @param originalAdHocCmpdIdIn Long
     */
    public void setOriginalAdHocCmpdId(Long originalAdHocCmpdIdIn)
    {
        this.originalAdHocCmpdId = originalAdHocCmpdIdIn;
    }

    // Generate 2 associations
    private Collection<AdHocCmpdFragment> adHocCmpdFragments = new HashSet<AdHocCmpdFragment>();

    /**
     * 
     * @return this.adHocCmpdFragments Collection<AdHocCmpdFragment>
     */
    public Collection<AdHocCmpdFragment> getAdHocCmpdFragments()
    {
        return this.adHocCmpdFragments;
    }

    /**
     * 
     * @param adHocCmpdFragmentsIn Collection<AdHocCmpdFragment>
     */
    public void setAdHocCmpdFragments(Collection<AdHocCmpdFragment> adHocCmpdFragmentsIn)
    {
        this.adHocCmpdFragments = adHocCmpdFragmentsIn;
    }

    /**
     * 
     * @param elementToAdd AdHocCmpdFragment
     * @return <tt>true</tt> if this collection changed as a result of the
     *         call
     */
    public boolean addAdHocCmpdFragments(AdHocCmpdFragment elementToAdd)
    {
        return this.adHocCmpdFragments.add(elementToAdd);
    }

    /**
     * 
     * @param elementToRemove AdHocCmpdFragment
     * @return <tt>true</tt> if this collection changed as a result of the
     *         call
     */
    public boolean removeAdHocCmpdFragments(AdHocCmpdFragment elementToRemove)
    {
        return this.adHocCmpdFragments.remove(elementToRemove);
    }

    private AdHocCmpdFragment adHocCmpdParentFragment;

    /**
     * 
     * @return this.adHocCmpdParentFragment AdHocCmpdFragment
     */
    public AdHocCmpdFragment getAdHocCmpdParentFragment()
    {
        return this.adHocCmpdParentFragment;
    }

    /**
     * 
     * @param adHocCmpdParentFragmentIn AdHocCmpdFragment
     */
    public void setAdHocCmpdParentFragment(AdHocCmpdFragment adHocCmpdParentFragmentIn)
    {
        this.adHocCmpdParentFragment = adHocCmpdParentFragmentIn;
    }

    /**
     * This entity does not have any identifiers
     * but since it extends the <code>CmpdImpl</code> class
     * it will simply delegate the call up there.
     *
     * @see mwk.dctddata.domain.Cmpd#equals(Object)
     */
    @Override
    public boolean equals(Object object)
    {
        return super.equals(object);
    }

    /**
     * This entity does not have any identifiers
     * but since it extends the <code>CmpdImpl</code> class
     * it will simply delegate the call up there.
     *
     * @see mwk.dctddata.domain.Cmpd#hashCode()
     */
    @Override
    public int hashCode()
    {
        return super.hashCode();
    }

    /**
     * Constructs new instances of {@link AdHocCmpd}.
     */
    public static final class Factory
    {
        /**
         * Constructs a new instance of {@link AdHocCmpd}.
         * @return new AdHocCmpdImpl()
         */
        public static AdHocCmpd newInstance()
        {
            return new AdHocCmpdImpl();
        }

        /**
         * Constructs a new instance of {@link AdHocCmpd}, taking all required and/or
         * read-only properties as arguments, except for identifiers.
         * @param cmpdOwner String
         * @return newInstance
         */
        public static AdHocCmpd newInstance(String cmpdOwner)
        {
            final AdHocCmpd entity = new AdHocCmpdImpl();
            entity.setCmpdOwner(cmpdOwner);
            return entity;
        }

        /**
         * Constructs a new instance of {@link AdHocCmpd}, taking all possible properties
         * (except the identifier(s))as arguments.
         * @param cmpdListMembers Collection<CmpdListMember>
         * @param cmpdOwner String
         * @param adHocCmpdId Long
         * @param name String
         * @param originalAdHocCmpdId Long
         * @param adHocCmpdFragments Collection<AdHocCmpdFragment>
         * @param adHocCmpdParentFragment AdHocCmpdFragment
         * @return newInstance AdHocCmpd
         */
        public static AdHocCmpd newInstance(Collection<CmpdListMember> cmpdListMembers, String cmpdOwner, Long adHocCmpdId, String name, Long originalAdHocCmpdId, Collection<AdHocCmpdFragment> adHocCmpdFragments, AdHocCmpdFragment adHocCmpdParentFragment)
        {
            final AdHocCmpd entity = new AdHocCmpdImpl();
            entity.setCmpdListMembers(cmpdListMembers);
            entity.setCmpdOwner(cmpdOwner);
            entity.setAdHocCmpdId(adHocCmpdId);
            entity.setName(name);
            entity.setOriginalAdHocCmpdId(originalAdHocCmpdId);
            entity.setAdHocCmpdFragments(adHocCmpdFragments);
            entity.setAdHocCmpdParentFragment(adHocCmpdParentFragment);
            return entity;
        }
    }

    /**
     * @see Comparable#compareTo
     */
    public int compareTo(AdHocCmpd o)
    {
        int cmp = 0;
        if (this.getId() != null)
        {
            cmp = this.getId().compareTo(o.getId());
        }
        else
        {
            if (this.getCmpdOwner() != null)
            {
                cmp = (cmp != 0 ? cmp : this.getCmpdOwner().compareTo(o.getCmpdOwner()));
            }
            if (this.getAdHocCmpdId() != null)
            {
                cmp = (cmp != 0 ? cmp : this.getAdHocCmpdId().compareTo(o.getAdHocCmpdId()));
            }
            if (this.getName() != null)
            {
                cmp = (cmp != 0 ? cmp : this.getName().compareTo(o.getName()));
            }
            if (this.getOriginalAdHocCmpdId() != null)
            {
                cmp = (cmp != 0 ? cmp : this.getOriginalAdHocCmpdId().compareTo(o.getOriginalAdHocCmpdId()));
            }
        }
        return cmp;
    }
// HibernateEntity.vsl merge-point
}