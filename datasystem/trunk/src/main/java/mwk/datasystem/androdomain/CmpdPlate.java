// license-header java merge-point
//
// Attention: Generated code! Do not modify by hand!
// Generated by: hibernate/HibernateEntity.vsl in andromda-hibernate-cartridge.
//
package mwk.datasystem.androdomain;

import java.io.Serializable;

/**
 * 
 */
// HibernateEntity.vsl annotations merge-point
public abstract class CmpdPlate
    implements Serializable, Comparable<CmpdPlate>
{
    /**
     * The serial version UID of this class. Needed for serialization.
     */
    private static final long serialVersionUID = 1152508331528659425L;

    // Generate 4 attributes
    private String plateName;

    /**
     * 
     * @return this.plateName String
     */
    public String getPlateName()
    {
        return this.plateName;
    }

    /**
     * 
     * @param plateNameIn String
     */
    public void setPlateName(String plateNameIn)
    {
        this.plateName = plateNameIn;
    }

    private String plateRow;

    /**
     * 
     * @return this.plateRow String
     */
    public String getPlateRow()
    {
        return this.plateRow;
    }

    /**
     * 
     * @param plateRowIn String
     */
    public void setPlateRow(String plateRowIn)
    {
        this.plateRow = plateRowIn;
    }

    private String plateColumn;

    /**
     * 
     * @return this.plateColumn String
     */
    public String getPlateColumn()
    {
        return this.plateColumn;
    }

    /**
     * 
     * @param plateColumnIn String
     */
    public void setPlateColumn(String plateColumnIn)
    {
        this.plateColumn = plateColumnIn;
    }

    private Long id;

    /**
     * 
     * @return this.id Long
     */
    public Long getId()
    {
        return this.id;
    }

    /**
     * 
     * @param idIn Long
     */
    public void setId(Long idIn)
    {
        this.id = idIn;
    }

    // Generate 1 associations
    /**
     * Returns <code>true</code> if the argument is an CmpdPlate instance and all identifiers for this entity
     * equal the identifiers of the argument entity. Returns <code>false</code> otherwise.
     */
    @Override
    public boolean equals(Object object)
    {
        if (this == object)
        {
            return true;
        }
        if (!(object instanceof CmpdPlate))
        {
            return false;
        }
        final CmpdPlate that = (CmpdPlate)object;
        if (this.id == null || that.getId() == null || !this.id.equals(that.getId()))
        {
            return false;
        }
        return true;
    }

    /**
     * Returns a hash code based on this entity's identifiers.
     */
    @Override
    public int hashCode()
    {
        int hashCode = 0;
        hashCode = 29 * hashCode + (this.id == null ? 0 : this.id.hashCode());

        return hashCode;
    }

    /**
     * Constructs new instances of {@link CmpdPlate}.
     */
    public static final class Factory
    {
        /**
         * Constructs a new instance of {@link CmpdPlate}.
         * @return new CmpdPlateImpl()
         */
        public static CmpdPlate newInstance()
        {
            return new CmpdPlateImpl();
        }


        /**
         * Constructs a new instance of {@link CmpdPlate}, taking all possible properties
         * (except the identifier(s))as arguments.
         * @param plateName String
         * @param plateRow String
         * @param plateColumn String
         * @return newInstance CmpdPlate
         */
        public static CmpdPlate newInstance(String plateName, String plateRow, String plateColumn)
        {
            final CmpdPlate entity = new CmpdPlateImpl();
            entity.setPlateName(plateName);
            entity.setPlateRow(plateRow);
            entity.setPlateColumn(plateColumn);
            return entity;
        }
    }

    /**
     * @see Comparable#compareTo
     */
    public int compareTo(CmpdPlate o)
    {
        int cmp = 0;
        if (this.getId() != null)
        {
            cmp = this.getId().compareTo(o.getId());
        }
        else
        {
            if (this.getPlateName() != null)
            {
                cmp = (cmp != 0 ? cmp : this.getPlateName().compareTo(o.getPlateName()));
            }
            if (this.getPlateRow() != null)
            {
                cmp = (cmp != 0 ? cmp : this.getPlateRow().compareTo(o.getPlateRow()));
            }
            if (this.getPlateColumn() != null)
            {
                cmp = (cmp != 0 ? cmp : this.getPlateColumn().compareTo(o.getPlateColumn()));
            }
        }
        return cmp;
    }
// HibernateEntity.vsl merge-point
}