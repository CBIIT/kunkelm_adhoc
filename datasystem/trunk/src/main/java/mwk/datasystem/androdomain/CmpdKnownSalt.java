// license-header java merge-point
//
// Attention: Generated code! Do not modify by hand!
// Generated by: hibernate/HibernateEntity.vsl in andromda-hibernate-cartridge.
//
package mwk.datasystem.androdomain;

import java.io.Serializable;

/**
 * 
 */
// HibernateEntity.vsl annotations merge-point
public abstract class CmpdKnownSalt
    implements Serializable, Comparable<CmpdKnownSalt>
{
    /**
     * The serial version UID of this class. Needed for serialization.
     */
    private static final long serialVersionUID = 1278680713486986339L;

    // Generate 4 attributes
    private String mol;

    /**
     * 
     * @return this.mol String
     */
    public String getMol()
    {
        return this.mol;
    }

    /**
     * 
     * @param molIn String
     */
    public void setMol(String molIn)
    {
        this.mol = molIn;
    }

    private String smiles;

    /**
     * 
     * @return this.smiles String
     */
    public String getSmiles()
    {
        return this.smiles;
    }

    /**
     * 
     * @param smilesIn String
     */
    public void setSmiles(String smilesIn)
    {
        this.smiles = smilesIn;
    }

    private String saltName;

    /**
     * 
     * @return this.saltName String
     */
    public String getSaltName()
    {
        return this.saltName;
    }

    /**
     * 
     * @param saltNameIn String
     */
    public void setSaltName(String saltNameIn)
    {
        this.saltName = saltNameIn;
    }

    private Long id;

    /**
     * 
     * @return this.id Long
     */
    public Long getId()
    {
        return this.id;
    }

    /**
     * 
     * @param idIn Long
     */
    public void setId(Long idIn)
    {
        this.id = idIn;
    }

    // Generate 1 associations
    /**
     * Returns <code>true</code> if the argument is an CmpdKnownSalt instance and all identifiers for this entity
     * equal the identifiers of the argument entity. Returns <code>false</code> otherwise.
     */
    @Override
    public boolean equals(Object object)
    {
        if (this == object)
        {
            return true;
        }
        if (!(object instanceof CmpdKnownSalt))
        {
            return false;
        }
        final CmpdKnownSalt that = (CmpdKnownSalt)object;
        if (this.id == null || that.getId() == null || !this.id.equals(that.getId()))
        {
            return false;
        }
        return true;
    }

    /**
     * Returns a hash code based on this entity's identifiers.
     */
    @Override
    public int hashCode()
    {
        int hashCode = 0;
        hashCode = 29 * hashCode + (this.id == null ? 0 : this.id.hashCode());

        return hashCode;
    }

    /**
     * Constructs new instances of {@link CmpdKnownSalt}.
     */
    public static final class Factory
    {
        /**
         * Constructs a new instance of {@link CmpdKnownSalt}.
         * @return new CmpdKnownSaltImpl()
         */
        public static CmpdKnownSalt newInstance()
        {
            return new CmpdKnownSaltImpl();
        }


        /**
         * Constructs a new instance of {@link CmpdKnownSalt}, taking all possible properties
         * (except the identifier(s))as arguments.
         * @param mol String
         * @param smiles String
         * @param saltName String
         * @return newInstance CmpdKnownSalt
         */
        public static CmpdKnownSalt newInstance(String mol, String smiles, String saltName)
        {
            final CmpdKnownSalt entity = new CmpdKnownSaltImpl();
            entity.setMol(mol);
            entity.setSmiles(smiles);
            entity.setSaltName(saltName);
            return entity;
        }
    }

    /**
     * @see Comparable#compareTo
     */
    public int compareTo(CmpdKnownSalt o)
    {
        int cmp = 0;
        if (this.getId() != null)
        {
            cmp = this.getId().compareTo(o.getId());
        }
        else
        {
            if (this.getMol() != null)
            {
                cmp = (cmp != 0 ? cmp : this.getMol().compareTo(o.getMol()));
            }
            if (this.getSmiles() != null)
            {
                cmp = (cmp != 0 ? cmp : this.getSmiles().compareTo(o.getSmiles()));
            }
            if (this.getSaltName() != null)
            {
                cmp = (cmp != 0 ? cmp : this.getSaltName().compareTo(o.getSaltName()));
            }
        }
        return cmp;
    }
// HibernateEntity.vsl merge-point
}