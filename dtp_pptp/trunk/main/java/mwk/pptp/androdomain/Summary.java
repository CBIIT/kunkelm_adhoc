// license-header java merge-point
//
// Attention: Generated code! Do not modify by hand!
// Generated by: hibernate/HibernateEntity.vsl in andromda-hibernate-cartridge.
//
package mwk.pptp.androdomain;

import java.io.Serializable;

/**
 * 
 */
// HibernateEntity.vsl annotations merge-point
public abstract class Summary
    implements Serializable, Comparable<Summary>
{
    /**
     * The serial version UID of this class. Needed for serialization.
     */
    private static final long serialVersionUID = 515866098963655796L;

    // Generate 28 attributes
    private Integer theN1;

    /**
     * 
     * @return this.theN1 Integer
     */
    public Integer getTheN1()
    {
        return this.theN1;
    }

    /**
     * 
     * @param theN1In Integer
     */
    public void setTheN1(Integer theN1In)
    {
        this.theN1 = theN1In;
    }

    private Integer theD1;

    /**
     * 
     * @return this.theD1 Integer
     */
    public Integer getTheD1()
    {
        return this.theD1;
    }

    /**
     * 
     * @param theD1In Integer
     */
    public void setTheD1(Integer theD1In)
    {
        this.theD1 = theD1In;
    }

    private Integer theE1;

    /**
     * 
     * @return this.theE1 Integer
     */
    public Integer getTheE1()
    {
        return this.theE1;
    }

    /**
     * 
     * @param theE1In Integer
     */
    public void setTheE1(Integer theE1In)
    {
        this.theE1 = theE1In;
    }

    private Integer theN2;

    /**
     * 
     * @return this.theN2 Integer
     */
    public Integer getTheN2()
    {
        return this.theN2;
    }

    /**
     * 
     * @param theN2In Integer
     */
    public void setTheN2(Integer theN2In)
    {
        this.theN2 = theN2In;
    }

    private Integer countMouseEvents;

    /**
     * 
     * @return this.countMouseEvents Integer
     */
    public Integer getCountMouseEvents()
    {
        return this.countMouseEvents;
    }

    /**
     * 
     * @param countMouseEventsIn Integer
     */
    public void setCountMouseEvents(Integer countMouseEventsIn)
    {
        this.countMouseEvents = countMouseEventsIn;
    }

    private Double medianDaysToEvent;

    /**
     * 
     * @return this.medianDaysToEvent Double
     */
    public Double getMedianDaysToEvent()
    {
        return this.medianDaysToEvent;
    }

    /**
     * 
     * @param medianDaysToEventIn Double
     */
    public void setMedianDaysToEvent(Double medianDaysToEventIn)
    {
        this.medianDaysToEvent = medianDaysToEventIn;
    }

    private String thePValueFlag;

    /**
     * 
     * @return this.thePValueFlag String
     */
    public String getThePValueFlag()
    {
        return this.thePValueFlag;
    }

    /**
     * 
     * @param thePValueFlagIn String
     */
    public void setThePValueFlag(String thePValueFlagIn)
    {
        this.thePValueFlag = thePValueFlagIn;
    }

    private Double thePValue;

    /**
     * 
     * @return this.thePValue Double
     */
    public Double getThePValue()
    {
        return this.thePValue;
    }

    /**
     * 
     * @param thePValueIn Double
     */
    public void setThePValue(Double thePValueIn)
    {
        this.thePValue = thePValueIn;
    }

    private String efsTOverCFlag;

    /**
     * 
     * @return this.efsTOverCFlag String
     */
    public String getEfsTOverCFlag()
    {
        return this.efsTOverCFlag;
    }

    /**
     * 
     * @param efsTOverCFlagIn String
     */
    public void setEfsTOverCFlag(String efsTOverCFlagIn)
    {
        this.efsTOverCFlag = efsTOverCFlagIn;
    }

    private Double efsTOverC;

    /**
     * 
     * @return this.efsTOverC Double
     */
    public Double getEfsTOverC()
    {
        return this.efsTOverC;
    }

    /**
     * 
     * @param efsTOverCIn Double
     */
    public void setEfsTOverC(Double efsTOverCIn)
    {
        this.efsTOverC = efsTOverCIn;
    }

    private String medianRTVFlag;

    /**
     * 
     * @return this.medianRTVFlag String
     */
    public String getMedianRTVFlag()
    {
        return this.medianRTVFlag;
    }

    /**
     * 
     * @param medianRTVFlagIn String
     */
    public void setMedianRTVFlag(String medianRTVFlagIn)
    {
        this.medianRTVFlag = medianRTVFlagIn;
    }

    private Double medianRTV;

    /**
     * 
     * @return this.medianRTV Double
     */
    public Double getMedianRTV()
    {
        return this.medianRTV;
    }

    /**
     * 
     * @param medianRTVIn Double
     */
    public void setMedianRTV(Double medianRTVIn)
    {
        this.medianRTV = medianRTVIn;
    }

    private Double TOverC;

    /**
     * 
     * @return this.TOverC Double
     */
    public Double getTOverC()
    {
        return this.TOverC;
    }

    /**
     * 
     * @param TOverCIn Double
     */
    public void setTOverC(Double TOverCIn)
    {
        this.TOverC = TOverCIn;
    }

    private Integer dayForTOverC;

    /**
     * 
     * @return this.dayForTOverC Integer
     */
    public Integer getDayForTOverC()
    {
        return this.dayForTOverC;
    }

    /**
     * 
     * @param dayForTOverCIn Integer
     */
    public void setDayForTOverC(Integer dayForTOverCIn)
    {
        this.dayForTOverC = dayForTOverCIn;
    }

    private String theTOverCPValueFlag;

    /**
     * 
     * @return this.theTOverCPValueFlag String
     */
    public String getTheTOverCPValueFlag()
    {
        return this.theTOverCPValueFlag;
    }

    /**
     * 
     * @param theTOverCPValueFlagIn String
     */
    public void setTheTOverCPValueFlag(String theTOverCPValueFlagIn)
    {
        this.theTOverCPValueFlag = theTOverCPValueFlagIn;
    }

    private Double theTOverCPValue;

    /**
     * 
     * @return this.theTOverCPValue Double
     */
    public Double getTheTOverCPValue()
    {
        return this.theTOverCPValue;
    }

    /**
     * 
     * @param theTOverCPValueIn Double
     */
    public void setTheTOverCPValue(Double theTOverCPValueIn)
    {
        this.theTOverCPValue = theTOverCPValueIn;
    }

    private Integer countPD;

    /**
     * 
     * @return this.countPD Integer
     */
    public Integer getCountPD()
    {
        return this.countPD;
    }

    /**
     * 
     * @param countPDIn Integer
     */
    public void setCountPD(Integer countPDIn)
    {
        this.countPD = countPDIn;
    }

    private Integer countPD1;

    /**
     * 
     * @return this.countPD1 Integer
     */
    public Integer getCountPD1()
    {
        return this.countPD1;
    }

    /**
     * 
     * @param countPD1In Integer
     */
    public void setCountPD1(Integer countPD1In)
    {
        this.countPD1 = countPD1In;
    }

    private Integer countPD2;

    /**
     * 
     * @return this.countPD2 Integer
     */
    public Integer getCountPD2()
    {
        return this.countPD2;
    }

    /**
     * 
     * @param countPD2In Integer
     */
    public void setCountPD2(Integer countPD2In)
    {
        this.countPD2 = countPD2In;
    }

    private Integer countSD;

    /**
     * 
     * @return this.countSD Integer
     */
    public Integer getCountSD()
    {
        return this.countSD;
    }

    /**
     * 
     * @param countSDIn Integer
     */
    public void setCountSD(Integer countSDIn)
    {
        this.countSD = countSDIn;
    }

    private Integer countPR;

    /**
     * 
     * @return this.countPR Integer
     */
    public Integer getCountPR()
    {
        return this.countPR;
    }

    /**
     * 
     * @param countPRIn Integer
     */
    public void setCountPR(Integer countPRIn)
    {
        this.countPR = countPRIn;
    }

    private Integer countCR;

    /**
     * 
     * @return this.countCR Integer
     */
    public Integer getCountCR()
    {
        return this.countCR;
    }

    /**
     * 
     * @param countCRIn Integer
     */
    public void setCountCR(Integer countCRIn)
    {
        this.countCR = countCRIn;
    }

    private Integer countMCR;

    /**
     * 
     * @return this.countMCR Integer
     */
    public Integer getCountMCR()
    {
        return this.countMCR;
    }

    /**
     * 
     * @param countMCRIn Integer
     */
    public void setCountMCR(Integer countMCRIn)
    {
        this.countMCR = countMCRIn;
    }

    private Double responseMedianScore;

    /**
     * 
     * @return this.responseMedianScore Double
     */
    public Double getResponseMedianScore()
    {
        return this.responseMedianScore;
    }

    /**
     * 
     * @param responseMedianScoreIn Double
     */
    public void setResponseMedianScore(Double responseMedianScoreIn)
    {
        this.responseMedianScore = responseMedianScoreIn;
    }

    private String overallGroupMedianResponse;

    /**
     * 
     * @return this.overallGroupMedianResponse String
     */
    public String getOverallGroupMedianResponse()
    {
        return this.overallGroupMedianResponse;
    }

    /**
     * 
     * @param overallGroupMedianResponseIn String
     */
    public void setOverallGroupMedianResponse(String overallGroupMedianResponseIn)
    {
        this.overallGroupMedianResponse = overallGroupMedianResponseIn;
    }

    private Integer survivingPercent;

    /**
     * 
     * @return this.survivingPercent Integer
     */
    public Integer getSurvivingPercent()
    {
        return this.survivingPercent;
    }

    /**
     * 
     * @param survivingPercentIn Integer
     */
    public void setSurvivingPercent(Integer survivingPercentIn)
    {
        this.survivingPercent = survivingPercentIn;
    }

    private Double averageRTVAtDayForTOverC;

    /**
     * 
     * @return this.averageRTVAtDayForTOverC Double
     */
    public Double getAverageRTVAtDayForTOverC()
    {
        return this.averageRTVAtDayForTOverC;
    }

    /**
     * 
     * @param averageRTVAtDayForTOverCIn Double
     */
    public void setAverageRTVAtDayForTOverC(Double averageRTVAtDayForTOverCIn)
    {
        this.averageRTVAtDayForTOverC = averageRTVAtDayForTOverCIn;
    }

    private Long id;

    /**
     * 
     * @return this.id Long
     */
    public Long getId()
    {
        return this.id;
    }

    /**
     * 
     * @param idIn Long
     */
    public void setId(Long idIn)
    {
        this.id = idIn;
    }

    // Generate 2 associations
    private GroupRoleType groupRoleType;

    /**
     * 
     * @return this.groupRoleType GroupRoleType
     */
    public GroupRoleType getGroupRoleType()
    {
        return this.groupRoleType;
    }

    /**
     * 
     * @param groupRoleTypeIn GroupRoleType
     */
    public void setGroupRoleType(GroupRoleType groupRoleTypeIn)
    {
        this.groupRoleType = groupRoleTypeIn;
    }

    private CellLineGroup cellLineGroup;

    /**
     * 
     * @return this.cellLineGroup CellLineGroup
     */
    public CellLineGroup getCellLineGroup()
    {
        return this.cellLineGroup;
    }

    /**
     * 
     * @param cellLineGroupIn CellLineGroup
     */
    public void setCellLineGroup(CellLineGroup cellLineGroupIn)
    {
        this.cellLineGroup = cellLineGroupIn;
    }

    /**
     * Returns <code>true</code> if the argument is an Summary instance and all identifiers for this entity
     * equal the identifiers of the argument entity. Returns <code>false</code> otherwise.
     */
    @Override
    public boolean equals(Object object)
    {
        if (this == object)
        {
            return true;
        }
        if (!(object instanceof Summary))
        {
            return false;
        }
        final Summary that = (Summary)object;
        if (this.id == null || that.getId() == null || !this.id.equals(that.getId()))
        {
            return false;
        }
        return true;
    }

    /**
     * Returns a hash code based on this entity's identifiers.
     */
    @Override
    public int hashCode()
    {
        int hashCode = 0;
        hashCode = 29 * hashCode + (this.id == null ? 0 : this.id.hashCode());

        return hashCode;
    }

    /**
     * Constructs new instances of {@link Summary}.
     */
    public static final class Factory
    {
        /**
         * Constructs a new instance of {@link Summary}.
         * @return new SummaryImpl()
         */
        public static Summary newInstance()
        {
            return new SummaryImpl();
        }

        /**
         * Constructs a new instance of {@link Summary}, taking all required and/or
         * read-only properties as arguments, except for identifiers.
         * @param overallGroupMedianResponse String
         * @param groupRoleType GroupRoleType
         * @param cellLineGroup CellLineGroup
         * @return newInstance
         */
        public static Summary newInstance(String overallGroupMedianResponse, GroupRoleType groupRoleType, CellLineGroup cellLineGroup)
        {
            final Summary entity = new SummaryImpl();
            entity.setOverallGroupMedianResponse(overallGroupMedianResponse);
            entity.setGroupRoleType(groupRoleType);
            entity.setCellLineGroup(cellLineGroup);
            return entity;
        }

        /**
         * Constructs a new instance of {@link Summary}, taking all possible properties
         * (except the identifier(s))as arguments.
         * @param theN1 Integer
         * @param theD1 Integer
         * @param theE1 Integer
         * @param theN2 Integer
         * @param countMouseEvents Integer
         * @param medianDaysToEvent Double
         * @param thePValueFlag String
         * @param thePValue Double
         * @param efsTOverCFlag String
         * @param efsTOverC Double
         * @param medianRTVFlag String
         * @param medianRTV Double
         * @param TOverC Double
         * @param dayForTOverC Integer
         * @param theTOverCPValueFlag String
         * @param theTOverCPValue Double
         * @param countPD Integer
         * @param countPD1 Integer
         * @param countPD2 Integer
         * @param countSD Integer
         * @param countPR Integer
         * @param countCR Integer
         * @param countMCR Integer
         * @param responseMedianScore Double
         * @param overallGroupMedianResponse String
         * @param survivingPercent Integer
         * @param averageRTVAtDayForTOverC Double
         * @param groupRoleType GroupRoleType
         * @param cellLineGroup CellLineGroup
         * @return newInstance Summary
         */
        public static Summary newInstance(Integer theN1, Integer theD1, Integer theE1, Integer theN2, Integer countMouseEvents, Double medianDaysToEvent, String thePValueFlag, Double thePValue, String efsTOverCFlag, Double efsTOverC, String medianRTVFlag, Double medianRTV, Double TOverC, Integer dayForTOverC, String theTOverCPValueFlag, Double theTOverCPValue, Integer countPD, Integer countPD1, Integer countPD2, Integer countSD, Integer countPR, Integer countCR, Integer countMCR, Double responseMedianScore, String overallGroupMedianResponse, Integer survivingPercent, Double averageRTVAtDayForTOverC, GroupRoleType groupRoleType, CellLineGroup cellLineGroup)
        {
            final Summary entity = new SummaryImpl();
            entity.setTheN1(theN1);
            entity.setTheD1(theD1);
            entity.setTheE1(theE1);
            entity.setTheN2(theN2);
            entity.setCountMouseEvents(countMouseEvents);
            entity.setMedianDaysToEvent(medianDaysToEvent);
            entity.setThePValueFlag(thePValueFlag);
            entity.setThePValue(thePValue);
            entity.setEfsTOverCFlag(efsTOverCFlag);
            entity.setEfsTOverC(efsTOverC);
            entity.setMedianRTVFlag(medianRTVFlag);
            entity.setMedianRTV(medianRTV);
            entity.setTOverC(TOverC);
            entity.setDayForTOverC(dayForTOverC);
            entity.setTheTOverCPValueFlag(theTOverCPValueFlag);
            entity.setTheTOverCPValue(theTOverCPValue);
            entity.setCountPD(countPD);
            entity.setCountPD1(countPD1);
            entity.setCountPD2(countPD2);
            entity.setCountSD(countSD);
            entity.setCountPR(countPR);
            entity.setCountCR(countCR);
            entity.setCountMCR(countMCR);
            entity.setResponseMedianScore(responseMedianScore);
            entity.setOverallGroupMedianResponse(overallGroupMedianResponse);
            entity.setSurvivingPercent(survivingPercent);
            entity.setAverageRTVAtDayForTOverC(averageRTVAtDayForTOverC);
            entity.setGroupRoleType(groupRoleType);
            entity.setCellLineGroup(cellLineGroup);
            return entity;
        }
    }

    /**
     * @see Comparable#compareTo
     */
    public int compareTo(Summary o)
    {
        int cmp = 0;
        if (this.getId() != null)
        {
            cmp = this.getId().compareTo(o.getId());
        }
        else
        {
            if (this.getTheN1() != null)
            {
                cmp = (cmp != 0 ? cmp : this.getTheN1().compareTo(o.getTheN1()));
            }
            if (this.getTheD1() != null)
            {
                cmp = (cmp != 0 ? cmp : this.getTheD1().compareTo(o.getTheD1()));
            }
            if (this.getTheE1() != null)
            {
                cmp = (cmp != 0 ? cmp : this.getTheE1().compareTo(o.getTheE1()));
            }
            if (this.getTheN2() != null)
            {
                cmp = (cmp != 0 ? cmp : this.getTheN2().compareTo(o.getTheN2()));
            }
            if (this.getCountMouseEvents() != null)
            {
                cmp = (cmp != 0 ? cmp : this.getCountMouseEvents().compareTo(o.getCountMouseEvents()));
            }
            if (this.getMedianDaysToEvent() != null)
            {
                cmp = (cmp != 0 ? cmp : this.getMedianDaysToEvent().compareTo(o.getMedianDaysToEvent()));
            }
            if (this.getThePValueFlag() != null)
            {
                cmp = (cmp != 0 ? cmp : this.getThePValueFlag().compareTo(o.getThePValueFlag()));
            }
            if (this.getThePValue() != null)
            {
                cmp = (cmp != 0 ? cmp : this.getThePValue().compareTo(o.getThePValue()));
            }
            if (this.getEfsTOverCFlag() != null)
            {
                cmp = (cmp != 0 ? cmp : this.getEfsTOverCFlag().compareTo(o.getEfsTOverCFlag()));
            }
            if (this.getEfsTOverC() != null)
            {
                cmp = (cmp != 0 ? cmp : this.getEfsTOverC().compareTo(o.getEfsTOverC()));
            }
            if (this.getMedianRTVFlag() != null)
            {
                cmp = (cmp != 0 ? cmp : this.getMedianRTVFlag().compareTo(o.getMedianRTVFlag()));
            }
            if (this.getMedianRTV() != null)
            {
                cmp = (cmp != 0 ? cmp : this.getMedianRTV().compareTo(o.getMedianRTV()));
            }
            if (this.getTOverC() != null)
            {
                cmp = (cmp != 0 ? cmp : this.getTOverC().compareTo(o.getTOverC()));
            }
            if (this.getDayForTOverC() != null)
            {
                cmp = (cmp != 0 ? cmp : this.getDayForTOverC().compareTo(o.getDayForTOverC()));
            }
            if (this.getTheTOverCPValueFlag() != null)
            {
                cmp = (cmp != 0 ? cmp : this.getTheTOverCPValueFlag().compareTo(o.getTheTOverCPValueFlag()));
            }
            if (this.getTheTOverCPValue() != null)
            {
                cmp = (cmp != 0 ? cmp : this.getTheTOverCPValue().compareTo(o.getTheTOverCPValue()));
            }
            if (this.getCountPD() != null)
            {
                cmp = (cmp != 0 ? cmp : this.getCountPD().compareTo(o.getCountPD()));
            }
            if (this.getCountPD1() != null)
            {
                cmp = (cmp != 0 ? cmp : this.getCountPD1().compareTo(o.getCountPD1()));
            }
            if (this.getCountPD2() != null)
            {
                cmp = (cmp != 0 ? cmp : this.getCountPD2().compareTo(o.getCountPD2()));
            }
            if (this.getCountSD() != null)
            {
                cmp = (cmp != 0 ? cmp : this.getCountSD().compareTo(o.getCountSD()));
            }
            if (this.getCountPR() != null)
            {
                cmp = (cmp != 0 ? cmp : this.getCountPR().compareTo(o.getCountPR()));
            }
            if (this.getCountCR() != null)
            {
                cmp = (cmp != 0 ? cmp : this.getCountCR().compareTo(o.getCountCR()));
            }
            if (this.getCountMCR() != null)
            {
                cmp = (cmp != 0 ? cmp : this.getCountMCR().compareTo(o.getCountMCR()));
            }
            if (this.getResponseMedianScore() != null)
            {
                cmp = (cmp != 0 ? cmp : this.getResponseMedianScore().compareTo(o.getResponseMedianScore()));
            }
            if (this.getOverallGroupMedianResponse() != null)
            {
                cmp = (cmp != 0 ? cmp : this.getOverallGroupMedianResponse().compareTo(o.getOverallGroupMedianResponse()));
            }
            if (this.getSurvivingPercent() != null)
            {
                cmp = (cmp != 0 ? cmp : this.getSurvivingPercent().compareTo(o.getSurvivingPercent()));
            }
            if (this.getAverageRTVAtDayForTOverC() != null)
            {
                cmp = (cmp != 0 ? cmp : this.getAverageRTVAtDayForTOverC().compareTo(o.getAverageRTVAtDayForTOverC()));
            }
        }
        return cmp;
    }
// HibernateEntity.vsl merge-point
}