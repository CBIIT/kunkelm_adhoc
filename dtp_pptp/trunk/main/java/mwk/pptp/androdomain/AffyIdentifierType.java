// license-header java merge-point
//
// Attention: Generated code! Do not modify by hand!
// Generated by: hibernate/HibernateEntity.vsl in andromda-hibernate-cartridge.
//
package mwk.pptp.androdomain;

import java.io.Serializable;
import java.util.Collection;
import java.util.HashSet;

/**
 * 
 */
// HibernateEntity.vsl annotations merge-point
public abstract class AffyIdentifierType
    implements Serializable, Comparable<AffyIdentifierType>
{
    /**
     * The serial version UID of this class. Needed for serialization.
     */
    private static final long serialVersionUID = 2027883822995183328L;

    // Generate 4 attributes
    private String probeSetName;

    /**
     * 
     * @return this.probeSetName String
     */
    public String getProbeSetName()
    {
        return this.probeSetName;
    }

    /**
     * 
     * @param probeSetNameIn String
     */
    public void setProbeSetName(String probeSetNameIn)
    {
        this.probeSetName = probeSetNameIn;
    }

    private String accession;

    /**
     * 
     * @return this.accession String
     */
    public String getAccession()
    {
        return this.accession;
    }

    /**
     * 
     * @param accessionIn String
     */
    public void setAccession(String accessionIn)
    {
        this.accession = accessionIn;
    }

    private String genecard;

    /**
     * 
     * @return this.genecard String
     */
    public String getGenecard()
    {
        return this.genecard;
    }

    /**
     * 
     * @param genecardIn String
     */
    public void setGenecard(String genecardIn)
    {
        this.genecard = genecardIn;
    }

    private Long id;

    /**
     * 
     * @return this.id Long
     */
    public Long getId()
    {
        return this.id;
    }

    /**
     * 
     * @param idIn Long
     */
    public void setId(Long idIn)
    {
        this.id = idIn;
    }

    // Generate 1 associations
    private Collection<AffyData> affyDatas = new HashSet<AffyData>();

    /**
     * 
     * @return this.affyDatas Collection<AffyData>
     */
    public Collection<AffyData> getAffyDatas()
    {
        return this.affyDatas;
    }

    /**
     * 
     * @param affyDatasIn Collection<AffyData>
     */
    public void setAffyDatas(Collection<AffyData> affyDatasIn)
    {
        this.affyDatas = affyDatasIn;
    }

    /**
     * 
     * @param elementToAdd AffyData
     * @return <tt>true</tt> if this collection changed as a result of the
     *         call
     */
    public boolean addAffyDatas(AffyData elementToAdd)
    {
        return this.affyDatas.add(elementToAdd);
    }

    /**
     * 
     * @param elementToRemove AffyData
     * @return <tt>true</tt> if this collection changed as a result of the
     *         call
     */
    public boolean removeAffyDatas(AffyData elementToRemove)
    {
        return this.affyDatas.remove(elementToRemove);
    }

    /**
     * Returns <code>true</code> if the argument is an AffyIdentifierType instance and all identifiers for this entity
     * equal the identifiers of the argument entity. Returns <code>false</code> otherwise.
     */
    @Override
    public boolean equals(Object object)
    {
        if (this == object)
        {
            return true;
        }
        if (!(object instanceof AffyIdentifierType))
        {
            return false;
        }
        final AffyIdentifierType that = (AffyIdentifierType)object;
        if (this.id == null || that.getId() == null || !this.id.equals(that.getId()))
        {
            return false;
        }
        return true;
    }

    /**
     * Returns a hash code based on this entity's identifiers.
     */
    @Override
    public int hashCode()
    {
        int hashCode = 0;
        hashCode = 29 * hashCode + (this.id == null ? 0 : this.id.hashCode());

        return hashCode;
    }

    /**
     * Constructs new instances of {@link AffyIdentifierType}.
     */
    public static final class Factory
    {
        /**
         * Constructs a new instance of {@link AffyIdentifierType}.
         * @return new AffyIdentifierTypeImpl()
         */
        public static AffyIdentifierType newInstance()
        {
            return new AffyIdentifierTypeImpl();
        }

        /**
         * Constructs a new instance of {@link AffyIdentifierType}, taking all required and/or
         * read-only properties as arguments, except for identifiers.
         * @param probeSetName String
         * @return newInstance
         */
        public static AffyIdentifierType newInstance(String probeSetName)
        {
            final AffyIdentifierType entity = new AffyIdentifierTypeImpl();
            entity.setProbeSetName(probeSetName);
            return entity;
        }

        /**
         * Constructs a new instance of {@link AffyIdentifierType}, taking all possible properties
         * (except the identifier(s))as arguments.
         * @param probeSetName String
         * @param accession String
         * @param genecard String
         * @param affyDatas Collection<AffyData>
         * @return newInstance AffyIdentifierType
         */
        public static AffyIdentifierType newInstance(String probeSetName, String accession, String genecard, Collection<AffyData> affyDatas)
        {
            final AffyIdentifierType entity = new AffyIdentifierTypeImpl();
            entity.setProbeSetName(probeSetName);
            entity.setAccession(accession);
            entity.setGenecard(genecard);
            entity.setAffyDatas(affyDatas);
            return entity;
        }
    }

    /**
     * @see Comparable#compareTo
     */
    public int compareTo(AffyIdentifierType o)
    {
        int cmp = 0;
        if (this.getId() != null)
        {
            cmp = this.getId().compareTo(o.getId());
        }
        else
        {
            if (this.getProbeSetName() != null)
            {
                cmp = (cmp != 0 ? cmp : this.getProbeSetName().compareTo(o.getProbeSetName()));
            }
            if (this.getAccession() != null)
            {
                cmp = (cmp != 0 ? cmp : this.getAccession().compareTo(o.getAccession()));
            }
            if (this.getGenecard() != null)
            {
                cmp = (cmp != 0 ? cmp : this.getGenecard().compareTo(o.getGenecard()));
            }
        }
        return cmp;
    }
// HibernateEntity.vsl merge-point
}