// license-header java merge-point
//
// Attention: Generated code! Do not modify by hand!
// Generated by: hibernate/HibernateSearchProperties.vsl in andromda-spring-cartridge.
//
package mwk.pptp;

import java.util.Arrays;
import java.util.Collection;
import java.util.HashMap;
import java.util.Map;
import mwk.pptp.androdomain.AffyDataImpl;
import mwk.pptp.androdomain.AffyIdentifierTypeImpl;
import mwk.pptp.androdomain.CellLineGroupImpl;
import mwk.pptp.androdomain.CellLineMasterImpl;
import mwk.pptp.androdomain.CellLineTypeImpl;
import mwk.pptp.androdomain.CellTypeImpl;
import mwk.pptp.androdomain.CompoundMasterImpl;
import mwk.pptp.androdomain.CompoundTypeImpl;
import mwk.pptp.androdomain.ConcentrationUnitTypeImpl;
import mwk.pptp.androdomain.GroupRoleTypeImpl;
import mwk.pptp.androdomain.ImplantSiteTypeImpl;
import mwk.pptp.androdomain.MouseCrosstabImpl;
import mwk.pptp.androdomain.MouseGroupImpl;
import mwk.pptp.androdomain.MouseImpl;
import mwk.pptp.androdomain.MouseTypeImpl;
import mwk.pptp.androdomain.MtdStudyImpl;
import mwk.pptp.androdomain.PanelTypeImpl;
import mwk.pptp.androdomain.RetestTypeImpl;
import mwk.pptp.androdomain.ScheduleTypeImpl;
import mwk.pptp.androdomain.SummaryImpl;
import mwk.pptp.androdomain.TreatmentRouteTypeImpl;
import mwk.pptp.androdomain.VehicleTypeImpl;
import org.apache.commons.collections.CollectionUtils;
import org.apache.commons.collections.Predicate;

/**
 * Stores the embedded values and associations of all entities in the system by type.
 * Is used to determine the appropriate parameter name when an embedded value's property
 * is referenced as the attribute to search by (as opposed to an association).
 *
 * @author Chad Brandon
 */
@SuppressWarnings({"unchecked"})
public class CriteriaSearchProperties
{
    private static final Map embeddedValuesByType = new HashMap();
    private static final Map embeddedValueNamesByType = new HashMap();
    private static final Map navigableAssociationEndsByType = new HashMap();

    static
    {
        initializeCompoundType1();
        initializeCellLineMaster2();
        initializeAffyIdentifierType3();
        initializeMouseCrosstab4();
        initializeSummary5();
        initializePanelType6();
        initializeScheduleType7();
        initializeImplantSiteType8();
        initializeCompoundMaster9();
        initializeMouseGroup10();
        initializeCellLineType11();
        initializeCellType12();
        initializeMouse13();
        initializeVehicleType14();
        initializeRetestType15();
        initializeGroupRoleType16();
        initializeMouseType17();
        initializeTreatmentRouteType18();
        initializeCellLineGroup19();
        initializeMtdStudy20();
        initializeConcentrationUnitType21();
        initializeAffyData22();
    }

    private static final void initializeCompoundType1()
    {
        embeddedValueNamesByType.put(
            CompoundTypeImpl.class,
            null);
        embeddedValuesByType.put(
            CompoundTypeImpl.class,
            null);
        navigableAssociationEndsByType.put(
            CompoundTypeImpl.class,
            Arrays.asList(
                new PropertyType[]
                {
                    new PropertyType("mtdStudies", MtdStudyImpl.class)
                }
            )
        );
    }

    private static final void initializeCellLineMaster2()
    {
        embeddedValueNamesByType.put(
            CellLineMasterImpl.class,
            null);
        embeddedValuesByType.put(
            CellLineMasterImpl.class,
            null);
        navigableAssociationEndsByType.put(
            CellLineMasterImpl.class,
            null);
    }

    private static final void initializeAffyIdentifierType3()
    {
        embeddedValueNamesByType.put(
            AffyIdentifierTypeImpl.class,
            null);
        embeddedValuesByType.put(
            AffyIdentifierTypeImpl.class,
            null);
        navigableAssociationEndsByType.put(
            AffyIdentifierTypeImpl.class,
            Arrays.asList(
                new PropertyType[]
                {
                    new PropertyType("affyDatas", AffyDataImpl.class)
                }
            )
        );
    }

    private static final void initializeMouseCrosstab4()
    {
        embeddedValueNamesByType.put(
            MouseCrosstabImpl.class,
            null);
        embeddedValuesByType.put(
            MouseCrosstabImpl.class,
            null);
        navigableAssociationEndsByType.put(
            MouseCrosstabImpl.class,
            Arrays.asList(
                new PropertyType[]
                {
                    new PropertyType("mouseGroup", MouseGroupImpl.class)
                }
            )
        );
    }

    private static final void initializeSummary5()
    {
        embeddedValueNamesByType.put(
            SummaryImpl.class,
            null);
        embeddedValuesByType.put(
            SummaryImpl.class,
            null);
        navigableAssociationEndsByType.put(
            SummaryImpl.class,
            Arrays.asList(
                new PropertyType[]
                {
                    new PropertyType("groupRoleType", GroupRoleTypeImpl.class),
                    new PropertyType("cellLineGroup", CellLineGroupImpl.class)
                }
            )
        );
    }

    private static final void initializePanelType6()
    {
        embeddedValueNamesByType.put(
            PanelTypeImpl.class,
            null);
        embeddedValuesByType.put(
            PanelTypeImpl.class,
            null);
        navigableAssociationEndsByType.put(
            PanelTypeImpl.class,
            Arrays.asList(
                new PropertyType[]
                {
                    new PropertyType("cellLineTypes", CellLineTypeImpl.class)
                }
            )
        );
    }

    private static final void initializeScheduleType7()
    {
        embeddedValueNamesByType.put(
            ScheduleTypeImpl.class,
            null);
        embeddedValuesByType.put(
            ScheduleTypeImpl.class,
            null);
        navigableAssociationEndsByType.put(
            ScheduleTypeImpl.class,
            Arrays.asList(
                new PropertyType[]
                {
                    new PropertyType("cellLineGroups", CellLineGroupImpl.class)
                }
            )
        );
    }

    private static final void initializeImplantSiteType8()
    {
        embeddedValueNamesByType.put(
            ImplantSiteTypeImpl.class,
            null);
        embeddedValuesByType.put(
            ImplantSiteTypeImpl.class,
            null);
        navigableAssociationEndsByType.put(
            ImplantSiteTypeImpl.class,
            Arrays.asList(
                new PropertyType[]
                {
                    new PropertyType("cellLineGroups", CellLineGroupImpl.class)
                }
            )
        );
    }

    private static final void initializeCompoundMaster9()
    {
        embeddedValueNamesByType.put(
            CompoundMasterImpl.class,
            null);
        embeddedValuesByType.put(
            CompoundMasterImpl.class,
            null);
        navigableAssociationEndsByType.put(
            CompoundMasterImpl.class,
            null);
    }

    private static final void initializeMouseGroup10()
    {
        embeddedValueNamesByType.put(
            MouseGroupImpl.class,
            null);
        embeddedValuesByType.put(
            MouseGroupImpl.class,
            null);
        navigableAssociationEndsByType.put(
            MouseGroupImpl.class,
            Arrays.asList(
                new PropertyType[]
                {
                    new PropertyType("mouseCrosstab", MouseCrosstabImpl.class),
                    new PropertyType("cellLineGroup", CellLineGroupImpl.class),
                    new PropertyType("mice", MouseImpl.class),
                    new PropertyType("groupRoleType", GroupRoleTypeImpl.class)
                }
            )
        );
    }

    private static final void initializeCellLineType11()
    {
        embeddedValueNamesByType.put(
            CellLineTypeImpl.class,
            null);
        embeddedValuesByType.put(
            CellLineTypeImpl.class,
            null);
        navigableAssociationEndsByType.put(
            CellLineTypeImpl.class,
            Arrays.asList(
                new PropertyType[]
                {
                    new PropertyType("cellLineGroups", CellLineGroupImpl.class),
                    new PropertyType("panelType", PanelTypeImpl.class),
                    new PropertyType("cellType", CellTypeImpl.class),
                    new PropertyType("affyDatas", AffyDataImpl.class)
                }
            )
        );
    }

    private static final void initializeCellType12()
    {
        embeddedValueNamesByType.put(
            CellTypeImpl.class,
            null);
        embeddedValuesByType.put(
            CellTypeImpl.class,
            null);
        navigableAssociationEndsByType.put(
            CellTypeImpl.class,
            Arrays.asList(
                new PropertyType[]
                {
                    new PropertyType("cellLineTypes", CellLineTypeImpl.class)
                }
            )
        );
    }

    private static final void initializeMouse13()
    {
        embeddedValueNamesByType.put(
            MouseImpl.class,
            null);
        embeddedValuesByType.put(
            MouseImpl.class,
            null);
        navigableAssociationEndsByType.put(
            MouseImpl.class,
            Arrays.asList(
                new PropertyType[]
                {
                    new PropertyType("mouseGroup", MouseGroupImpl.class)
                }
            )
        );
    }

    private static final void initializeVehicleType14()
    {
        embeddedValueNamesByType.put(
            VehicleTypeImpl.class,
            null);
        embeddedValuesByType.put(
            VehicleTypeImpl.class,
            null);
        navigableAssociationEndsByType.put(
            VehicleTypeImpl.class,
            Arrays.asList(
                new PropertyType[]
                {
                    new PropertyType("cellLineGroups", CellLineGroupImpl.class)
                }
            )
        );
    }

    private static final void initializeRetestType15()
    {
        embeddedValueNamesByType.put(
            RetestTypeImpl.class,
            null);
        embeddedValuesByType.put(
            RetestTypeImpl.class,
            null);
        navigableAssociationEndsByType.put(
            RetestTypeImpl.class,
            null);
    }

    private static final void initializeGroupRoleType16()
    {
        embeddedValueNamesByType.put(
            GroupRoleTypeImpl.class,
            null);
        embeddedValuesByType.put(
            GroupRoleTypeImpl.class,
            null);
        navigableAssociationEndsByType.put(
            GroupRoleTypeImpl.class,
            Arrays.asList(
                new PropertyType[]
                {
                    new PropertyType("summaries", SummaryImpl.class),
                    new PropertyType("mouseGroups", MouseGroupImpl.class)
                }
            )
        );
    }

    private static final void initializeMouseType17()
    {
        embeddedValueNamesByType.put(
            MouseTypeImpl.class,
            null);
        embeddedValuesByType.put(
            MouseTypeImpl.class,
            null);
        navigableAssociationEndsByType.put(
            MouseTypeImpl.class,
            Arrays.asList(
                new PropertyType[]
                {
                    new PropertyType("cellLineGroups", CellLineGroupImpl.class)
                }
            )
        );
    }

    private static final void initializeTreatmentRouteType18()
    {
        embeddedValueNamesByType.put(
            TreatmentRouteTypeImpl.class,
            null);
        embeddedValuesByType.put(
            TreatmentRouteTypeImpl.class,
            null);
        navigableAssociationEndsByType.put(
            TreatmentRouteTypeImpl.class,
            Arrays.asList(
                new PropertyType[]
                {
                    new PropertyType("cellLineGroups", CellLineGroupImpl.class)
                }
            )
        );
    }

    private static final void initializeCellLineGroup19()
    {
        embeddedValueNamesByType.put(
            CellLineGroupImpl.class,
            null);
        embeddedValuesByType.put(
            CellLineGroupImpl.class,
            null);
        navigableAssociationEndsByType.put(
            CellLineGroupImpl.class,
            Arrays.asList(
                new PropertyType[]
                {
                    new PropertyType("implantSiteType", ImplantSiteTypeImpl.class),
                    new PropertyType("mouseGroups", MouseGroupImpl.class),
                    new PropertyType("summaries", SummaryImpl.class),
                    new PropertyType("scheduleType", ScheduleTypeImpl.class),
                    new PropertyType("cellLineType", CellLineTypeImpl.class),
                    new PropertyType("vehicleType", VehicleTypeImpl.class),
                    new PropertyType("mouseType", MouseTypeImpl.class),
                    new PropertyType("treatmentRouteType", TreatmentRouteTypeImpl.class),
                    new PropertyType("mtdStudy", MtdStudyImpl.class),
                    new PropertyType("concentrationUnitType", ConcentrationUnitTypeImpl.class)
                }
            )
        );
    }

    private static final void initializeMtdStudy20()
    {
        embeddedValueNamesByType.put(
            MtdStudyImpl.class,
            null);
        embeddedValuesByType.put(
            MtdStudyImpl.class,
            null);
        navigableAssociationEndsByType.put(
            MtdStudyImpl.class,
            Arrays.asList(
                new PropertyType[]
                {
                    new PropertyType("cellLineGroups", CellLineGroupImpl.class),
                    new PropertyType("compoundType", CompoundTypeImpl.class)
                }
            )
        );
    }

    private static final void initializeConcentrationUnitType21()
    {
        embeddedValueNamesByType.put(
            ConcentrationUnitTypeImpl.class,
            null);
        embeddedValuesByType.put(
            ConcentrationUnitTypeImpl.class,
            null);
        navigableAssociationEndsByType.put(
            ConcentrationUnitTypeImpl.class,
            Arrays.asList(
                new PropertyType[]
                {
                    new PropertyType("cellLineGroups", CellLineGroupImpl.class)
                }
            )
        );
    }

    private static final void initializeAffyData22()
    {
        embeddedValueNamesByType.put(
            AffyDataImpl.class,
            null);
        embeddedValuesByType.put(
            AffyDataImpl.class,
            null);
        navigableAssociationEndsByType.put(
            AffyDataImpl.class,
            Arrays.asList(
                new PropertyType[]
                {
                    new PropertyType("affyIdentifierType", AffyIdentifierTypeImpl.class),
                    new PropertyType("cellLineType", CellLineTypeImpl.class)
                }
            )
        );
    }

    /**
     * Attempts to get the embedded value list for the given type (or returns null
     * if one doesn't exist).
     *
     * @param type the type of which to retrieve the value.
     * @return the collection of embedded value names.
     */
    public static Collection getEmbeddedValues(final Class type)
    {
        return (Collection)embeddedValueNamesByType.get(type);
    }

    /**
     * Gets the type of the navigable association end given the <code>ownerType</code>
     * and <code>name</code>
     *
     * @param ownerType the owner of the association.
     * @param name the name of the association end to find.
     * @return the type of the association end.
     */
    public static Class getNavigableAssociationEndType(final Class ownerType, final String name)
    {
        return getPropertyType(navigableAssociationEndsByType, ownerType, name);
    }

    /**
     * Gets the type of the embedded value given the <code>ownerType</code>
     * and <code>name</code>
     *
     * @param ownerType the owner of the association.
     * @param name the name of the association end to find.
     * @return the type of the association end.
     */
    public static Class getEmbeddedValueType(final Class ownerType, final String name)
    {
        return getPropertyType(embeddedValuesByType, ownerType, name);
    }

    /**
     * Gets the type of the embedded value given the <code>ownerType</code>
     * and <code>name</code>
     *
     * @param properties Map contains the Collection of properties given the ownerType Class
     * @param ownerType the owner of the association.
     * @param name the name of the association end to find.
     * @return the type of the association end.
     */
    public static Class getPropertyType(final Map properties, final Class ownerType, final String name)
    {
        final Collection ends = (Collection)properties.get(ownerType);
        final PropertyType type = (PropertyType)CollectionUtils.find(
            ends,
            new Predicate()
            {
                public boolean evaluate(final Object object)
                {
                    return ((PropertyType)object).name.equals(name);
                }
            });
        return type != null ? type.type : null;
    }

    /**
     * Gets the type of the property given the <code>ownerType</code>
     * and <code>name</code>
     *
     * @param ownerType the owner of the association.
     * @param name the name of the association end to find.
     * @return the type of the association end.
     */
    public static Class getPropertyType(final Class ownerType, final String name)
    {
        Class type = getNavigableAssociationEndType(ownerType, name);
        if (type == null)
        {
            type = getEmbeddedValueType(ownerType, name);
        }
        return type;
    }

    /**
     * A private class storing the name and type.
     */
    protected static final class PropertyType
    {
        /**
         * @param nameIn
         * @param typeIn
         */
        protected PropertyType(final String nameIn, final Class typeIn)
        {
            this.name = nameIn;
            this.type = typeIn;
        }

        /** PropertyType name */
        protected String name;
        /** PropertyType type Class */
        protected Class type;
    }
}